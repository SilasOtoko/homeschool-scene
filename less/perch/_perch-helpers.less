//
// Helpers
// --------------------------------------------------
// Classes used for aiding front-end development that
// can assist in defining or restyling elements w/out
// needing to be full-blown overrides.
// --------------------------------------------------
// For !important using override classes, see
// _utilities.less.
// --------------------------------------------------



// Screenreader + Skip Link
// --------------------------------------------------

// Variables
// ---------------------------------------
// @skip-link-button-position:     fixed !important;
// @skip-link-button-top:         @common-gutter;
// @skip-link-button-left:       @common-gutter;
@skip-link-button-z-indez:       1001;
// ---------------------------------------

// Styles
// ---------------------------------------
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0,0,0,0);
  white-space: nowrap;
  border: 0;
}
.sr-only-focusable:focus,
.sr-only-focusable:active {
  position: static;
  width: auto;
  height: auto;
  overflow: visible;
  clip: auto;
  white-space: normal;
}

.skip-link-button {
  left: -999px;
  position: absolute;
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden;
  z-index: -999;
  &:focus {
    background-color: #fff;
    left: auto;
    top: auto;
    width: auto;
    height: auto;
    overflow: auto;
    padding: 0.5em 1em;
    text-align: center;
    font-size: 1.2em;
    z-index: 999;
  }
}


// Clearfixing
// --------------------------------------------------
// .clear_float() is the LESS mixin (_mixins.less);
// .clearfix is a helper CSS class
// --------------------------------------------------
.clearfix {
  .clear_float();
}



// Stripped Lists
// --------------------------------------------------
// ☠☠☠☠ DEPRECATED ☠☠☠☠
// Deprecated because:
//  - class name not consistent with Perch
//  - stripped is a bit clearer
.list-bare,
// end deprecated code ☠☠☠☠
.list--stripped {
  .strip_list ();
}



// Common Content Vertical Spacing
// --------------------------------------------------
// A reusable set of helpers for defining vertical
// spacing with percentages, yet capping those
// percentages at set viewport widths.
// --------------------------------------------------

// Variables
// ---------------------------------------
// @content-vertical-spacing-lock-vw:     @site-max-width;
// @content-vertical-spacing:         5%;
// @content-vertical-spacing-locked:     (@content-vertical-spacing-lock-vw * @content-vertical-spacing / 100);
// // ---------------------------------------


// Styles
// ---------------------------------------
// .common-content-vertical-spacing {
//   padding-top:    @content-vertical-spacing;
//   padding-bottom: @content-vertical-spacing;

//   @media (min-width: @content-vertical-spacing-lock-vw) {
//     padding-top:    @content-vertical-spacing-locked;
//     padding-bottom: @content-vertical-spacing-locked;
//   }
// }
// .common-content-vertical-spacing-top {
//   padding-top:    @content-vertical-spacing;

//   @media (min-width: @content-vertical-spacing-lock-vw) {
//     padding-top:    @content-vertical-spacing-locked;
//   }
// }
// .common-content-vertical-spacing-bottom {
//   padding-bottom: @content-vertical-spacing;

//   @media (min-width: @content-vertical-spacing-lock-vw) {
//     padding-bottom: @content-vertical-spacing-locked;
//   }
// }



// Images
// --------------------------------------------------
.img-fluid, // BS4 class name
.img-responsive {
  display: block;
  max-width: 100%;
  height: auto;
}



// SVGs
// --------------------------------------------------
.svg-wrapper {
  display: block;

  > svg {
    max-width: 100%;
    height: auto;
    vertical-align: top;
  }
}



// JS toggles
// --------------------------------------------------
// .is-mobile-scroll-locked {
//   overflow: hidden;
//   // position: fixed; // 2018-01-02 removed because this was causing all versions of WebKit to fail: the mobile navigation would no longer show.
//   height: 100%;
//   width: 100%;

//   // In landscape views this seems to zoom way in to the page. So this fixes it
//   @media all and (orientation: landscape) {
//     position: static;
//     height: auto;
//     width: auto;
//   }
//   @media (min-width: @desktop-styles-min) {
//     overflow: visible;
//     position: relative;
//     height: auto;
//     width: auto;
//   }
// }



// Make full width
// --------------------------------------------------
// Useful for breaking elements out of containers
// NOTE: this assumes that the container is centered.
// --------------------------------------------------
.make-full-width {
  // Make width full viewport width
  width: 100vw;
  // Allow for relative positioning
  position: relative;
  // Relative to its container width, it is pushed 50% to the left
  left: 50%;
  // Relative to its own width (100vw), it is pulled back 50% to the left
  transform: translate(-50%);
}



// Gutter Break Out helpers
// --------------------------------------------------
// Defaults to @common-gutter but can be adjusted
// --------------------------------------------------

// Variables
// ---------------------------------------
// @gutter-break-out-gutter-width: @common-gutter;
// ---------------------------------------


// Styles
// ---------------------------------------
// .gutter-break-out-xs {
//   @media (max-width: @screen-xs-max) {
//     margin-left:  -(@gutter-break-out-gutter-width);
//     margin-right: -(@gutter-break-out-gutter-width);
//   }
// }
// .gutter-break-out-sm {
//   @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
//     margin-left:  -(@gutter-break-out-gutter-width);
//     margin-right: -(@gutter-break-out-gutter-width);
//   }
// }
// .gutter-break-out-md {
//   @media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
//     margin-left:  -(@gutter-break-out-gutter-width);
//     margin-right: -(@gutter-break-out-gutter-width);
//   }
// }
// .gutter-break-out-lg {
//   @media (min-width: @screen-lg-min) and (max-width: @screen-lg-max) {
//     margin-left:  -(@gutter-break-out-gutter-width);
//     margin-right: -(@gutter-break-out-gutter-width);
//   }
// }
// .gutter-break-out-xl {
//   @media (min-width: @screen-xl-min) and (max-width: @screen-xl-max) {
//     margin-left:  -(@gutter-break-out-gutter-width);
//     margin-right: -(@gutter-break-out-gutter-width);
//   }
// }
// .gutter-break-out-xxl {
//   @media (min-width: @screen-xxl-min) {
//     margin-left:  -(@gutter-break-out-gutter-width);
//     margin-right: -(@gutter-break-out-gutter-width);
//   }
// }