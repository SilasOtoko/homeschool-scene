/*!
Theme Name: Goshawk Theme
Description: Rare Bird Wordpress site starter theme
Author: Rare Bird Inc
Author URI: https://rarebirdinc.com/
Version: 1.2.1
*/
/* Import Perch Core parts here */
@-webkit-keyframes pulse {
  50% {
    -webkit-transform: scale(1.05);
            transform: scale(1.05);
  }
}
@keyframes pulse {
  50% {
    -webkit-transform: scale(1.05);
            transform: scale(1.05);
  }
}
@-webkit-keyframes bigPulse {
  50% {
    -webkit-transform: scale(1.2);
            transform: scale(1.2);
  }
}
@keyframes bigPulse {
  50% {
    -webkit-transform: scale(1.2);
            transform: scale(1.2);
  }
}
@-webkit-keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@-webkit-keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
@-webkit-keyframes fadeInUp {
  from {
    opacity: 0;
    -webkit-transform: translateY(-2.77777778em);
            transform: translateY(-2.77777778em);
  }
  to {
    opacity: 1;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}
@keyframes fadeInUp {
  from {
    opacity: 0;
    -webkit-transform: translateY(-2.77777778em);
            transform: translateY(-2.77777778em);
  }
  to {
    opacity: 1;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}
@-webkit-keyframes levitate {
  to {
    -webkit-transform: translateY(-20%);
            transform: translateY(-20%);
  }
}
@keyframes levitate {
  to {
    -webkit-transform: translateY(-20%);
            transform: translateY(-20%);
  }
}
@-webkit-keyframes full-rotation {
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}
@keyframes full-rotation {
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}
@-webkit-keyframes shake {
  from,
  to {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
  10%,
  30%,
  50%,
  70%,
  90% {
    -webkit-transform: translate3d(-0.55555556em, 0, 0);
    transform: translate3d(-0.55555556em, 0, 0);
  }
  20%,
  40%,
  60%,
  80% {
    -webkit-transform: translate3d(0.55555556em, 0, 0);
    transform: translate3d(0.55555556em, 0, 0);
  }
}
@keyframes shake {
  from,
  to {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
  10%,
  30%,
  50%,
  70%,
  90% {
    -webkit-transform: translate3d(-0.55555556em, 0, 0);
    transform: translate3d(-0.55555556em, 0, 0);
  }
  20%,
  40%,
  60%,
  80% {
    -webkit-transform: translate3d(0.55555556em, 0, 0);
    transform: translate3d(0.55555556em, 0, 0);
  }
}
@-webkit-keyframes zoomIn {
  from {
    opacity: 0;
    -webkit-transform: scale3d(0.3, 0.3, 0.3);
    transform: scale3d(0.3, 0.3, 0.3);
  }
  50% {
    opacity: 1;
  }
}
@keyframes zoomIn {
  from {
    opacity: 0;
    -webkit-transform: scale3d(0.3, 0.3, 0.3);
    transform: scale3d(0.3, 0.3, 0.3);
  }
  50% {
    opacity: 1;
  }
}
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}
/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}
/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}
/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}
/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}
/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}
/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}
/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}
/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}
/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}
/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}
/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}
/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}
/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}
/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}
/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}
/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}
/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}
/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}
/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}
/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}
/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}
/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}
/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}
/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}
/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}
*,
*::before,
*::after {
  box-sizing: border-box;
}
:root {
  -moz-tab-size: 4;
  -o-tab-size: 4;
     tab-size: 4;
}
body {
  background-color: #FFF;
}
input[type="radio"],
input[type="checkbox"],
input[type="reset"],
input[type="button"],
input[type="submit"],
select,
option,
button,
label[for] {
  cursor: pointer;
}
a,
area,
button,
[role=button],
input:not([type=range]),
label,
select,
summary,
textarea {
  touch-action: manipulation;
}
button[disabled],
html input[disabled],
select[disabled] {
  opacity: 0.5;
  cursor: default;
  cursor: not-allowed;
}
table {
  border-collapse: collapse;
}
select {
  max-width: 100%;
  margin-left: 0;
}
input[type="search"] {
  box-sizing: border-box;
  -webkit-appearance: none;
}
input[type="radio"] {
  margin-left: 1px;
  margin-right: 3px;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
input[type="number"] {
  -moz-appearance: textfield;
}
figure {
  margin: 0 0 1em;
}
ul,
ol,
dd,
p,
figure,
pre,
table,
fieldset,
hr,
.content-block {
  margin-top: 0;
  margin-bottom: 1rem;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}
.sr-only-focusable:focus,
.sr-only-focusable:active {
  position: static;
  width: auto;
  height: auto;
  overflow: visible;
  clip: auto;
  white-space: normal;
}
.skip-link-button {
  left: -999px;
  position: absolute;
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden;
  z-index: -999;
}
.skip-link-button:focus {
  background-color: #fff;
  left: auto;
  top: auto;
  width: auto;
  height: auto;
  overflow: auto;
  padding: 0.5em 1em;
  text-align: center;
  font-size: 1.2em;
  z-index: 999;
}
.clearfix:after {
  content: "";
  display: block;
  clear: both;
}
.list-bare,
.list--stripped {
  padding: 0;
  list-style-type: none;
}
.list-bare li,
.list--stripped li {
  list-style: none;
}
.img-fluid,
.img-responsive {
  display: block;
  max-width: 100%;
  height: auto;
}
.svg-wrapper {
  display: block;
}
.svg-wrapper > svg {
  max-width: 100%;
  height: auto;
  vertical-align: top;
}
.make-full-width {
  width: 100vw;
  position: relative;
  left: 50%;
  -webkit-transform: translate(-50%);
          transform: translate(-50%);
}
html {
  min-height: 100%;
  font-family: "Lato", Freesans, Helmet, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-weight: normal;
  color: #555;
  background-color: #FFF;
}
body {
  position: relative;
  min-height: 100vh;
  background-color: #FFF;
  line-height: 1.5;
}
.global-wrapper {
  position: relative;
  height: 100%;
}
.global-wrapper:after {
  content: "";
  display: block;
  clear: both;
}
::-moz-selection {
  color: #000;
  background: #B4D5FF;
  text-shadow: none;
}
::selection {
  color: #000;
  background: #B4D5FF;
  text-shadow: none;
}
body {
  -webkit-tap-highlight-color: transparent;
}
.browser-message {
  display: none;
  max-width: 1920px;
  padding: 3.5% 1em;
  margin: auto auto 1rem;
  background-color: #EECFCF;
  text-align: center;
  line-height: 1.5;
  color: #B94A48;
}
.mod-no-picture .browser-message.browser-outdated-message {
  display: block !important;
}
.mod-no-js .browser-message.browser-no-js-message {
  display: block !important;
}
_:-ms-fullscreen,
:root.mod-no-picture .browser-message.browser-outdated-message {
  display: none !important;
}
@media print {
  *,
  *::before,
  *::after {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  a,
  a:visited {
    text-decoration: underline;
  }
  abbr[title]::after {
    content: " (" attr(title) ")";
  }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }
  thead {
    display: table-header-group;
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  img {
    max-width: 100% !important;
  }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }
  h2,
  h3 {
    page-break-after: avoid;
  }
}
.embed-wrapper {
  position: relative;
  max-width: 100%;
  height: 0;
  padding-top: 56.25%;
  margin-bottom: 1rem;
  overflow: hidden;
}
.embed-wrapper.embed--4x3 {
  padding-top: 75%;
}
.embed-wrapper.embed--anamorphic_widescreen {
  padding-top: 41.84100418%;
}
.embed-wrapper > iframe,
.embed-wrapper .embed-object {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  margin: 0;
}
.full-page-backdrop {
  display: none;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 100;
  min-height: 2000px;
  min-height: 100vh;
  background-color: rgba(51, 51, 51, 0.75);
  -webkit-animation: fadeIn 0.25s ease;
          animation: fadeIn 0.25s ease;
}
.full-page-backdrop.is-active {
  display: block;
}
.full-page-backdrop.animating-out {
  -webkit-animation: fadeOut 0.25s ease 0s 1 normal forwards;
          animation: fadeOut 0.25s ease 0s 1 normal forwards;
}
.island {
  padding: 20px;
  margin-bottom: 20px;
  background-color: transparent;
}
.island:after {
  content: "";
  display: block;
  clear: both;
}
.island > :last-child {
  margin-bottom: 0;
}
.island--highlighted {
  background-color: #F3F3F3;
}
.responsive-table-wrapper {
  max-width: 100%;
  min-height: 0.01%;
  margin-bottom: 1rem;
  overflow: auto;
  overflow-x: auto;
  background-image: linear-gradient(to right, #FFFFFF, rgba(255, 255, 255, 0)), linear-gradient(to left, #FFFFFF, rgba(255, 255, 255, 0)), linear-gradient(to right, #C3C3C3, rgba(195, 195, 195, 0)), linear-gradient(to left, #C3C3C3, rgba(195, 195, 195, 0));
  background-position: 0 0,
		100% 0,
		0 0,
		100% 0;
  background-repeat: no-repeat;
  background-color: white;
  background-size: 4em 100%, 4em 100%, 1em 100%, 1em 100%;
  background-attachment: local,
		local,
		scroll,
		scroll;
}
.responsive-table-wrapper > table {
  width: 100%;
  margin-top: 0;
  margin-bottom: 0;
}
.wrapping-label {
  position: relative;
  display: flex;
  align-items: baseline;
  overflow: hidden;
  margin-bottom: 0;
  font-size: 0.9rem;
  font-weight: normal;
  transition: all 0.1s ease-out;
}
.wrapping-label input {
  margin-right: -1.45em;
  margin-left: 0.45em;
  font-size: 0.9rem;
}
.wrapping-label .label-contents {
  flex: 1;
  display: block;
  width: 100%;
  padding: 0.25rem 1rem 0.25rem 2rem;
  transition: all 0.12s ease-out;
}
.wrapping-label.wrapping-label--centered-input {
  align-items: center;
}
.wrapping-label.wrapping-label--centered-input input {
  top: -0.1em;
}
.wrapping-label input:focus ~ .label-contents,
.wrapping-label:hover .label-contents {
  background-color: rgba(0, 0, 0, 0.04);
}
.wrapping-label:active {
  background-color: rgba(0, 0, 0, 0.08);
}
.wrapping-label input:checked ~ .label-contents {
  background-color: rgba(32, 79, 60, 0.15);
  text-shadow: 0 0.0625em 0.0625em #fff;
}
.wrapping-label:hover input:checked ~ .label-contents,
.wrapping-label input:checked:focus ~ .label-contents {
  background-color: rgba(32, 79, 60, 0.1);
}
#wpadminbar {
  position: fixed !important;
}
.button {
  border-radius: 5px;
  font-weight: 700;
  padding: 1rem 1.5rem;
  text-decoration: none;
  list-style: none;
  text-align: center;
  min-width: 200px;
  transition: color 150ms, background-color 150ms;
  line-height: 1;
}
.button:hover {
  cursor: pointer;
}
.button-wrapper {
  margin-top: 1.5rem;
}
.button-wrapper .button {
  margin-right: 0;
  margin-bottom: 0.5rem;
}
@media (min-width: 480px) {
  .button-wrapper .button {
    margin-right: 0.5rem;
  }
}
.button--primary {
  background-color: #5090cd;
  color: #fff;
}
.button--primary:hover,
.button--primary:focus {
  background-color: #71A9DD;
}
.button--dark {
  background-color: #26282b;
  color: #fff;
}
html {
  box-sizing: border-box;
}
*,
*:before,
*:after {
  box-sizing: inherit;
}
.container {
  max-width: 1920px;
  margin: 0 auto;
}
.global-wrapper {
  display: flex;
  display: -webkit-flex;
  flex-direction: column;
  min-height: 100vh;
  overflow-x: hidden;
}
.global-main {
  flex: 1 1 auto;
}
.post-content-wrapper {
  max-width: 1920px;
  margin: 0 auto;
}
.main-content-wrapper {
  max-width: 1920px;
  padding-top: 3rem;
  margin: 0 auto;
}
.main-content-row {
  padding-left: 5%;
  padding-right: 5%;
  max-width: 1920px;
  margin: 0 auto;
}
.main-content-row + .main-content-row {
  padding-top: 0;
}
.main-content-column {
  margin: 0 auto;
  flex-grow: 1;
}
.page-banner img {
  width: 100%;
  max-width: 1920px;
  height: 30vmax;
  max-height: 400px;
  min-height: 200px;
  margin: 0 auto;
  -o-object-fit: cover;
     object-fit: cover;
  display: block;
}
.entry-header {
  max-width: 700px;
  margin-left: auto;
  margin-right: auto;
}
.entry-content {
  max-width: 1140px;
  margin-left: auto;
  margin-right: auto;
}
.entry-content > :not(.alignwide):not(.alignfull) {
  max-width: 700px;
  margin-left: auto;
  margin-right: auto;
}
.entry-content > :last-child {
  margin-bottom: 3rem;
}
.entry-content > :last-child.alignfull {
  margin-bottom: 0;
}
.entry-content > .wp-block-group.has-background,
.entry-content > .wp-block-group.alignfull {
  padding: 5rem 5%;
}
.no-sidebar .main-content-row {
  max-width: unset;
}
.no-sidebar .main-content-column {
  margin: 0 auto;
}
.no-sidebar .main-content-column .main-content article {
  max-width: 700px;
  margin: 0 auto;
}
.no-sidebar .page-header {
  max-width: 700px;
}
.no-sidebar .pagination {
  max-width: 700px;
  margin: 0 auto;
}
.post-list {
  padding-bottom: 5rem;
}
.post-list .main-content-column {
  margin: 0;
}
.sidebar-content-column {
  padding-top: 2.5rem;
  flex-shrink: 0;
  margin: 0 auto;
}
.sidebar-content-column h2 {
  font-weight: 400;
  font-size: 1.5em;
  position: relative;
  padding-bottom: 15px;
}
.sidebar-content-column h2::after {
  content: '';
  height: 2px;
  position: absolute;
  width: 100px;
  bottom: 0;
  left: 0;
}
.sidebar-content-column h3 {
  background-color: #e4e9ed;
  padding: 1rem;
  margin-bottom: 0;
}
.sidebar-content-column ul {
  padding-left: 0;
}
.sidebar-content-column li {
  list-style: none;
  display: flex;
  display: -webkit-flex;
  margin-top: 10px;
}
.sidebar-content-column li a {
  color: #464b52;
  text-decoration: none;
  padding: 5px 0;
  line-height: 1.3;
}
.sidebar-content-column li .post-count,
.sidebar-content-column li .post-date {
  margin-left: auto;
  font-style: italic;
  color: #727b85;
  padding: 5px 0;
  font-size: 0.875em;
}
@media (min-width: 980px) {
  .sidebar-content-column {
    max-width: 100%;
    width: 440px;
    margin: 0 auto;
  }
}
@media (min-width: 680px) {
  .sidebar-wrapper {
    display: flex;
    display: -webkit-flex;
    flex-wrap: wrap;
    -webkit-flex-wrap: wrap;
  }
  .sidebar-wrapper .widget-container {
    width: 48%;
    margin-right: 4%;
  }
  .sidebar-wrapper .widget-container:nth-of-type(even) {
    margin-right: 0;
  }
}
.sidebar-wrapper .searchform {
  margin-top: 0;
}
@media (min-width: 980px) {
  .sidebar-wrapper {
    display: block;
  }
  .sidebar-wrapper .widget-container {
    width: 100%;
  }
}
.page-header {
  max-width: 700px;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 3rem;
  padding-left: 5%;
  padding-right: 5%;
}
@media (min-width: 780px) {
  .page-header {
    padding: 0;
  }
}
.widget-title:first-of-type {
  margin-top: 0;
}
.searchform {
  margin-top: 1rem;
  margin-bottom: 1rem;
}
.searchform div {
  display: flex;
  display: -webkit-flex;
}
.searchform input[type="text"] {
  flex-grow: 1;
  margin-right: 0.5rem;
}
@media (min-width: 980px) {
  .main-content-row {
    display: flex;
    display: -webkit-flex;
  }
  .sidebar-content-column {
    padding: 0 0 0 2.5rem;
    margin-left: auto;
  }
}
.global-header {
  padding: 1rem 5%;
  background-color: #2d4459;
  min-height: 90px;
  display: flex;
  display: -webkit-flex;
  align-items: center;
  -webkit-align-items: center;
}
.global-header .container {
  display: flex;
  display: -webkit-flex;
  flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  align-items: center;
  -webkit-align-items: center;
  width: 100%;
}
.global-header__logo a {
  text-decoration: none;
  color: #fff;
  display: inline-block;
  height: 100%;
  font-weight: 700;
}
.global-header__logo img {
  max-height: 80px;
  max-width: 300px;
}
.global-header__site-title {
  font-size: 2rem;
  text-transform: uppercase;
}
.global-header .full-logo {
  display: none;
}
@media (min-width: 480px) {
  .global-header .full-logo {
    display: block;
  }
  .global-header .small-logo {
    display: none;
  }
}
.main-navigation {
  margin-left: auto;
  display: flex;
  display: -webkit-flex;
  align-items: center;
  -webkit-align-items: center;
  display: none;
}
.main-navigation li a {
  border-radius: 5px;
  padding: 10px;
  transition: background-color 150ms;
  font-family: "Arvo", "Georgia", "Times New Roman", Times, serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}
.main-navigation li:hover a,
.main-navigation li:focus a {
  background-color: #e4e9ed;
  color: #26282b;
}
.main-navigation li a:focus-within {
  background-color: #e4e9ed;
  color: #26282b;
}
.main-navigation .menu-item-has-children {
  position: relative;
}
.main-navigation .menu-item-has-children:hover .sub-menu,
.main-navigation .menu-item-has-children:focus .sub-menu {
  left: 0;
  opacity: 1;
  -webkit-transform: scale(1);
          transform: scale(1);
}
.main-navigation .menu-item-has-children > a {
  transition: border-color 150ms, background-color 150ms;
}
.main-navigation .menu-item-has-children a {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}
.main-navigation .sub-menu {
  -webkit-transform: scale(0);
          transform: scale(0);
  transition: -webkit-transform 150ms;
  transition: transform 150ms;
  transition: transform 150ms, -webkit-transform 150ms;
  -webkit-transform-origin: 20% 0;
          transform-origin: 20% 0;
  position: absolute;
  left: -9999px;
  top: 100%;
  z-index: 2;
  min-width: 250px;
  background-color: #fff;
  padding: 0;
  flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
  border-top-right-radius: 5px;
  overflow: hidden;
  background-color: #e4e9ed;
}
.main-navigation .sub-menu li {
  padding: 0;
  margin: 0;
  width: 100%;
}
.main-navigation .sub-menu li a {
  margin: 0;
  display: inline-block;
  width: 100%;
  cursor: pointer;
  border-radius: 0;
  color: #26282b;
}
.main-navigation .sub-menu li a:hover {
  margin: 0;
}
.main-menu {
  padding: 0;
  margin-bottom: 0;
}
.main-menu li {
  display: inline-block;
}
.main-menu a {
  padding: 10px;
  color: #fff;
  text-decoration: none;
}
.edge.menu-item-has-children:hover .sub-menu {
  -webkit-transform-origin: 80% 0;
          transform-origin: 80% 0;
  left: auto;
  right: 0;
  border-top-left-radius: 5px;
  border-top-right-radius: 0;
}
@media (min-width: 1140px) {
  .main-navigation {
    display: block;
  }
}
body {
  background: #fff;
  /* Fallback for when there is no custom background color defined. */
}
img {
  max-width: 100%;
  height: auto;
  display: block;
}
.entry-content a:not(.button):not(.wp-block-button__link) {
  color: #486582;
  text-decoration: none;
}
input,
textarea,
select {
  border-radius: 5px;
  border: 1px solid #cbd1d5;
  padding: 0.5rem;
}
input[type="submit"] {
  background-color: #486582;
  color: #fff;
  border-color: #486582;
}
html {
  font-size: 18px;
}
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: "Lato", Freesans, Helmet, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  color: #464b52;
  font-size: 0.875rem;
}
@media screen and (min-width: 20rem) {
  body {
    font-size: calc(0.875rem  +  0.125  * ((100vw -  20rem ) / 30 ));
  }
}
@media screen and (min-width: 50rem) {
  body {
    font-size: 1rem;
  }
}
pre {
  overflow: auto;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  color: #26282b;
  margin-bottom: calc(1.45rem - 0.5rem);
  margin-top: 0;
  line-height: 1.1;
  font-family: "Arvo", "Georgia", "Times New Roman", Times, serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-weight: 400;
}
h1 {
  font-size: 2rem;
  margin-top: 0;
  font-weight: 700;
}
@media screen and (min-width: 20rem) {
  h1 {
    font-size: calc(2rem  +  0.5  * ((100vw -  20rem ) / 20 ));
  }
}
@media screen and (min-width: 40rem) {
  h1 {
    font-size: 2.5rem;
  }
}
* + h2 {
  margin-top: 1.5em;
}
body:not(.home) .entry-content > h2 {
  margin-top: 1.5em;
}
h2 {
  font-size: 1.75rem;
}
@media screen and (min-width: 20rem) {
  h2 {
    font-size: calc(1.75rem  +  0.25  * ((100vw -  20rem ) / 20 ));
  }
}
@media screen and (min-width: 40rem) {
  h2 {
    font-size: 2rem;
  }
}
h3 {
  font-size: 1.5rem;
}
@media screen and (min-width: 20rem) {
  h3 {
    font-size: calc(1.5rem  +  0.25  * ((100vw -  20rem ) / 20 ));
  }
}
@media screen and (min-width: 40rem) {
  h3 {
    font-size: 1.75rem;
  }
}
h4 {
  font-size: 1.25rem;
}
@media screen and (min-width: 20rem) {
  h4 {
    font-size: calc(1.25rem  +  0.25  * ((100vw -  20rem ) / 20 ));
  }
}
@media screen and (min-width: 40rem) {
  h4 {
    font-size: 1.5rem;
  }
}
h5 {
  font-size: 1rem;
}
@media screen and (min-width: 20rem) {
  h5 {
    font-size: calc(1rem  +  0.25  * ((100vw -  20rem ) / 20 ));
  }
}
@media screen and (min-width: 40rem) {
  h5 {
    font-size: 1.25rem;
  }
}
h6 {
  font-size: 0.875rem;
}
@media screen and (min-width: 20rem) {
  h6 {
    font-size: calc(0.875rem  +  0.125  * ((100vw -  20rem ) / 20 ));
  }
}
@media screen and (min-width: 40rem) {
  h6 {
    font-size: 1rem;
  }
}
.entry-content li {
  margin-bottom: 0.5rem;
}
.widget-container h3 {
  font-size: 1.25rem;
  font-weight: 400;
  text-align: center;
}
@media screen and (min-width: 20rem) {
  .widget-container h3 {
    font-size: calc(1.25rem  +  0.25  * ((100vw -  20rem ) / 30 ));
  }
}
@media screen and (min-width: 50rem) {
  .widget-container h3 {
    font-size: 1.5rem;
  }
}
.text-xl {
  font-size: 1.75rem;
}
@media screen and (min-width: 20rem) {
  .text-xl {
    font-size: calc(1.75rem  +  2.25  * ((100vw -  20rem ) / 80 ));
  }
}
@media screen and (min-width: 100rem) {
  .text-xl {
    font-size: 4rem;
  }
}
.entry-content * + h3,
.entry-content * + h4 {
  margin-top: 1em;
}
.global-footer {
  background-color: #26282b;
  color: #fff;
  padding: 1.5rem 5%;
  text-align: center;
}
.global-footer a {
  color: #fff;
  text-decoration: none;
}
.global-footer .social {
  margin-top: 1rem;
}
.global-footer .social a {
  margin-right: 0.5rem;
}
@media (min-width: 580px) {
  .global-footer .footer-container {
    display: flex;
    display: -webkit-flex;
  }
  .global-footer .social {
    margin-left: auto;
    margin-top: 0;
  }
  .global-footer .social a {
    margin-right: 0.5rem;
  }
}
.bg-blue {
  background-color: #486582;
  color: #fff;
}
.bg-gray-light {
  background-color: #e4e9ed;
}
.bg-blue-light {
  background-color: #5090cd;
  color: #fff;
}
.bg-blue-light h2,
.bg-blue-light h3,
.bg-blue-light h4,
.bg-blue-light h5,
.bg-blue-light h6 {
  color: #fff;
}
.bg-blue {
  background-color: #486582;
  color: #fff;
}
.bg-blue h2,
.bg-blue h3,
.bg-blue h4,
.bg-blue h5,
.bg-blue h6 {
  color: #fff;
}
.bg-blue .button {
  background-color: #26282b;
}
.bg-blue-dark {
  background-color: #2d4459;
  color: #fff;
}
.bg-blue-dark h2,
.bg-blue-dark h3,
.bg-blue-dark h4,
.bg-blue-dark h5,
.bg-blue-dark h6 {
  color: #fff;
}
.text-wrapper {
  max-width: 700px;
  margin: 0 auto;
}
.screen-reader-text {
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  -webkit-clip-path: inset(50%);
          clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute !important;
  width: 1px;
  word-wrap: normal !important;
  /* Many screen reader and browser combinations announce broken words as they would appear visually. */
}
.screen-reader-text:focus {
  background-color: #f1f1f1;
  border-radius: 3px;
  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
  clip: auto !important;
  -webkit-clip-path: none;
          clip-path: none;
  color: #21759b;
  display: block;
  font-size: 14px;
  font-size: 0.875rem;
  font-weight: bold;
  height: auto;
  left: 5px;
  line-height: normal;
  padding: 15px 23px 14px;
  text-decoration: none;
  top: 5px;
  width: auto;
  z-index: 100000;
}
.aspect-ratio-box {
  background: white;
}
.aspect-ratio-box::before {
  content: "";
  width: 1px;
  margin-left: -1px;
  float: left;
  height: 0;
  padding-top: 52.46332074%;
}
.aspect-ratio-box::after {
  /* to clear float */
  content: "";
  display: table;
  clear: both;
}
.padding-wrapper {
  padding-left: 5%;
  padding-right: 5%;
}
.global-header__navigation--hamburger {
  margin-left: auto;
  display: flex;
  display: -webkit-flex;
  align-items: center;
  -webkit-align-items: center;
}
.toggle-sidebar {
  padding: 0;
  background-color: transparent;
  margin-left: auto;
  border: 0;
}
.toggle-sidebar:hover {
  cursor: pointer;
}
.toggle-sidebar:hover .hamburger svg {
  fill: #fff;
}
.toggle-sidebar:focus .hamburger svg {
  fill: #fff;
}
.hamburger {
  position: relative;
  display: flex;
  display: -webkit-flex;
  align-items: center;
  -webkit-align-items: center;
}
.hamburger__label {
  margin-right: 0.5rem;
  color: #fff;
  font-family: "Arvo", "Georgia", "Times New Roman", Times, serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}
.hamburger svg {
  fill: #fff;
  width: 30px;
}
.overlay-menu-container {
  position: fixed;
  top: -1600px;
  left: 0;
  right: 0;
  background-color: #e4e9ed;
  min-height: 100vh;
  overflow-y: auto;
  z-index: 15;
  opacity: 0;
}
.overlay-menu-container .close-button {
  position: absolute;
  top: 4.5rem;
  right: 5%;
  z-index: 1;
  height: 40px;
  width: 40px;
  background-color: transparent;
  border: 0;
  -webkit-transform: none;
          transform: none;
  margin-left: auto;
}
.overlay-menu-container .close-button svg {
  stroke: #26282b;
}
.overlay-menu {
  display: flex;
  display: -webkit-flex;
  align-items: center;
  -webkit-align-items: center;
  justify-content: center;
  -webkit-justify-content: center;
  flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  opacity: 0;
  width: 100%;
  position: fixed;
  overflow-y: scroll;
  height: 100%;
  text-align: center;
}
.overlay-menu ul.menu {
  display: flex;
  display: -webkit-flex;
  flex-direction: column;
  padding-top: 40px;
  padding-left: 0;
}
.overlay-menu ul {
  display: flex;
  display: -webkit-flex;
  flex-direction: column;
  padding-top: 40px;
  padding-left: 0;
}
.overlay-menu li {
  padding-bottom: 0.5rem;
  list-style: none;
}
.overlay-menu a {
  font-size: 1.5rem;
  padding: 0.5rem 0.5rem 0;
  color: inherit;
  text-decoration: none;
}
.nav-open.global-wrapper {
  height: 100%;
  overflow: hidden;
}
.nav-open .overlay-menu-container {
  top: 0;
  transition: top 250ms;
  opacity: 1;
}
.nav-open .overlay-menu-container .overlay-menu,
.nav-open .overlay-menu-container .close-button {
  opacity: 1;
  transition: opacity 250ms 250ms;
  left: auto;
}
.nav-closed .overlay-menu-container {
  top: -1600px;
  transition: top 250ms 250ms;
}
.nav-closed .overlay-menu-container .overlay-menu,
.nav-closed .overlay-menu-container .close-button {
  opacity: 0;
  transition: opacity 150ms;
}
.nav-closed .overlay-menu-container .close-button {
  left: -1000px;
}
@media (min-width: 1140px) {
  .global-header__navigation--hamburger {
    display: none;
  }
}
.wp-block-image {
  text-align: center;
}
.wp-block-image img {
  display: block;
  margin: 0 auto;
}
.wp-block-image figcaption {
  background-color: #e4e9ed;
  padding: 0.5rem;
  margin-top: 0;
  margin: 0 auto;
}
.wp-block-image.alignfull img {
  max-height: 600px;
  -o-object-fit: cover;
     object-fit: cover;
}
.wp-block-cover.alignfull .wp-block-cover__inner-container {
  max-width: 1140px;
  margin-left: auto;
  margin-right: auto;
}
.wp-block-button {
  margin-bottom: 1em;
}
.wp-block-button .wp-block-button__link {
  border-radius: 5px;
  font-weight: 700;
  transition: background-color 150ms;
}
.wp-block-button .wp-block-button__link:not(.has-background) {
  background-color: #486582;
}
.wp-block-button .wp-block-button__link:not(.has-background):hover,
.wp-block-button .wp-block-button__link:not(.has-background):focus {
  background-color: #5090cd;
}
.wp-block-quote {
  margin: 2.5rem 1rem 2.5rem 0;
  padding-left: 1.5rem;
  border-left: 7px solid #486582;
}
.wp-block-quote p {
  font-style: italic;
  font-size: 1.5rem;
}
.wp-block-quote cite {
  color: #464b52;
}
.wp-block-media-text {
  min-height: 380px;
}
.wp-block-media-text.alignfull {
  min-height: 600px;
}
@media (max-width: 600px) {
  .wp-block-media-text .wp-block-media-text__content {
    margin-top: 1.5rem;
  }
  .wp-block-media-text.is-stacked-on-mobile.has-media-on-the-right .wp-block-media-text__media {
    grid-row: 1;
  }
  .wp-block-media-text.is-stacked-on-mobile.has-media-on-the-right .wp-block-media-text__content {
    grid-row: 2;
  }
}
.wp-block-columns {
  justify-content: center;
  -webkit-justify-content: center;
}
.wp-block-media-text.has-background__content {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}
.wp-block-separator {
  width: 150px;
  height: 2px;
  border: 0;
}
.alignwide {
  width: 100%;
}
.alignfull {
  margin-left: -50vw;
  margin-right: -50vw;
  max-width: 100vw;
  width: 100vw;
  left: 50%;
  right: 50%;
  margin-top: 2.5rem;
  margin-bottom: 2.5rem;
  margin-top: 2.5vw;
  margin-bottom: 2.5vw;
  position: relative;
}
.alignfull[class*='bg-']:not(.bg-white) {
  padding: 5rem 5%;
}
.wp-block-group .wp-block-group__inner-container {
  max-width: 1140px;
  margin-left: auto;
  margin-right: auto;
}
.wp-block-group .wp-block-group__inner-container .alignfull {
  width: 100%;
  max-width: 1920px;
}
.wp-block-group .wp-block-group__inner-container .alignwide {
  width: 100%;
  max-width: 1140px;
}
.wp-block-group.alignfull .wp-block-group__inner-container,
.wp-block-group.alignwide .wp-block-group__inner-container {
  max-width: unset;
}
.has-background h2 {
  margin-top: 0;
}
.has-background .wp-block-media-text {
  margin-top: 0;
}
.has-blue-dark-background-color {
  background-color: #2d4459;
}
.has-blue-background-color {
  background-color: #486582;
}
.has-blue-light-background-color {
  background-color: #5090cd;
}
.has-gray-dark-background-color {
  background-color: #727b85;
}
.has-gray-background-color {
  background-color: #cbd1d5;
}
.has-gray-light-background-color {
  background-color: #e4e9ed;
}
.has-black-background-color {
  background-color: #26282b;
}
.has-black-lighter-background-color {
  background-color: #464b52;
}
.has-white-background-color {
  background-color: #fff;
}
.has-blue-dark-color {
  color: #2d4459;
}
.has-blue-color {
  color: #486582;
}
.has-blue-light-color {
  color: #5090cd;
}
.has-gray-dark-color {
  color: #727b85;
}
.has-gray-color {
  color: #cbd1d5;
}
.has-gray-light-color {
  color: #e4e9ed;
}
.has-black-color {
  color: #26282b;
}
.has-black-lighter-color {
  color: #464b52;
}
.has-white-color {
  color: #fff;
}
.alignfull + .alignfull {
  margin-top: 0;
}
.wp-block-group.alignfull.has-background {
  padding: 2.5rem 5%;
}
@media (min-width: 780px) {
  .wp-block-group.alignfull.has-background {
    padding: 5rem 5%;
  }
}
.wp-block-group__inner-container > :not(.alignwide):not(.alignfull) {
  max-width: 700px;
  margin-left: auto;
  margin-right: auto;
}
p + .alignfull,
p + .alignwide {
  margin-top: 1.5rem;
}
.hero {
  padding: 5rem 5%;
  min-height: 30vh;
  height: 50vw;
  max-height: 600px;
  display: flex;
  display: -webkit-flex;
  align-items: center;
  -webkit-align-items: center;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  position: relative;
}
.hero .container {
  max-width: 1920px;
  margin: 0 auto;
}
.hero__content {
  max-width: 48em;
  color: #fff;
  position: relative;
  z-index: 1;
  text-align: center;
}
.hero__text {
  line-height: 1.1;
  font-family: "Arvo", "Georgia", "Times New Roman", Times, serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}
.hero .button-wrapper {
  margin-top: 1.5rem;
}
.hero::after {
  content: '';
  background: rgba(45, 68, 89, 0.5);
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
}
.post-list {
  padding-left: 5%;
  padding-right: 5%;
}
.post-list .main-content-row {
  max-width: 1140px;
  margin-left: auto;
  margin-right: auto;
  padding: 0;
}
.post-list article {
  padding: 2.5rem 0;
}
.post-list article h2 {
  margin-top: 0;
  margin-bottom: 0.5rem;
}
.post-list article h2 a {
  color: #26282b;
  text-decoration: none;
}
.post-list article .post-thumbnail {
  overflow: hidden;
  margin-bottom: 1.5rem;
}
.post-list article .post-thumbnail img {
  max-height: 500px;
  -o-object-fit: cover;
     object-fit: cover;
}
.post-list article .byline {
  color: #727b85;
  font-style: italic;
  text-decoration: none;
  margin-bottom: 1rem;
}
.post-list article .entry-title {
  margin-top: 0.5rem;
}
.post-list article:first-of-type {
  padding-top: 0;
}
.post-list article + article {
  border-bottom: 1px solid #eee;
}
.single .main-content-row {
  max-width: 1440px;
  margin: 0 auto;
}
.posts-navigation,
.post-navigation {
  max-width: 700px;
  margin-left: auto;
  margin-right: auto;
}
.posts-navigation .nav-links,
.post-navigation .nav-links {
  display: flex;
  display: -webkit-flex;
  padding-top: 1.5rem;
}
.posts-navigation .nav-previous a,
.post-navigation .nav-previous a,
.posts-navigation .nav-next a,
.post-navigation .nav-next a {
  transition: border 150ms, background-color 150ms, color 150ms;
  border-radius: 5px;
  padding: 5px 10px;
  list-style: none;
  text-align: center;
  min-width: 200px;
  border: 1px solid #464b52;
  text-decoration: none;
  color: #464b52;
}
.posts-navigation .nav-previous a:hover,
.post-navigation .nav-previous a:hover,
.posts-navigation .nav-next a:hover,
.post-navigation .nav-next a:hover,
.posts-navigation .nav-previous a:focus,
.post-navigation .nav-previous a:focus,
.posts-navigation .nav-next a:focus,
.post-navigation .nav-next a:focus {
  background-color: #486582;
  color: #fff;
  border: 1px solid #486582;
}
.posts-navigation .nav-previous,
.post-navigation .nav-previous {
  margin-right: auto;
}
.posts-navigation .nav-next,
.post-navigation .nav-next {
  margin-left: auto;
}
.single .content-area {
  padding: 5rem 0;
}
.pagination .nav-links {
  padding-top: 1.5rem;
  display: flex;
  display: -webkit-flex;
  font-size: 0.9em;
}
.pagination .nav-links .page-numbers {
  display: block;
  padding: 0.5em 0.75em;
  line-height: 1;
  border: 2px solid #e5ecf2;
  border-radius: 5px;
  margin: 0 0 1rem 0.5em;
  background: #fff;
  text-align: center;
  font-weight: 600;
  text-decoration: none;
  color: #555e61;
}
.pagination .nav-links .page-numbers.current {
  background: #dddfdf;
  border-color: #dddfdf;
}
.pagination .nav-links .page-numbers.dots {
  padding-left: 0.25em;
  padding-right: 0.25em;
  border: 0;
  background: transparent !important;
}
.pagination .nav-links a.page-numbers:focus,
.pagination .nav-links a.page-numbers:hover {
  border-color: #486582;
  background-color: #486582;
  color: #FFF;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/