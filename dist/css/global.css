/*! {{SITE NAME}} Styles
 * --------------------------------------------------
 */
/* Import Perch Core parts here */
@keyframes pulse {
  50% {
    transform: scale(1.05);
  }
}
@keyframes bigPulse {
  50% {
    transform: scale(1.2);
  }
}
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(-2.77777778em);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes levitate {
  to {
    transform: translateY(-20%);
  }
}
@keyframes full-rotation {
  to {
    transform: rotate(360deg);
  }
}
@keyframes shake {
  from,
  to {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
  10%,
  30%,
  50%,
  70%,
  90% {
    -webkit-transform: translate3d(-0.55555556em, 0, 0);
    transform: translate3d(-0.55555556em, 0, 0);
  }
  20%,
  40%,
  60%,
  80% {
    -webkit-transform: translate3d(0.55555556em, 0, 0);
    transform: translate3d(0.55555556em, 0, 0);
  }
}
@keyframes zoomIn {
  from {
    opacity: 0;
    -webkit-transform: scale3d(0.3, 0.3, 0.3);
    transform: scale3d(0.3, 0.3, 0.3);
  }
  50% {
    opacity: 1;
  }
}
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}
/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}
/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}
/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}
/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}
/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}
/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}
/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}
/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}
/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}
/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}
/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}
/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}
/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}
/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}
/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}
/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}
/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}
/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}
/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}
/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}
/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}
/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}
/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}
/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}
/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}
*,
*::before,
*::after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
:root {
  -moz-tab-size: 4;
  tab-size: 4;
}
body {
  background-color: #FFF;
}
input[type="radio"],
input[type="checkbox"],
input[type="reset"],
input[type="button"],
input[type="submit"],
select,
option,
button,
label[for] {
  cursor: pointer;
}
a,
area,
button,
[role=button],
input:not([type=range]),
label,
select,
summary,
textarea {
  -ms-touch-action: manipulation;
  touch-action: manipulation;
}
button[disabled],
html input[disabled],
select[disabled] {
  opacity: 0.5;
  cursor: default;
  cursor: not-allowed;
}
table {
  border-collapse: collapse;
}
select {
  max-width: 100%;
  margin-left: 0;
}
input[type="search"] {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-appearance: none;
}
input[type="radio"] {
  margin-left: 1px;
  margin-right: 3px;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
input[type="number"] {
  -moz-appearance: textfield;
}
figure {
  margin: 0 0 1em;
}
ul,
ol,
dd,
p,
figure,
pre,
table,
fieldset,
hr,
.content-block {
  margin-top: 0;
  margin-bottom: 1rem;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}
.sr-only-focusable:focus,
.sr-only-focusable:active {
  position: static;
  width: auto;
  height: auto;
  overflow: visible;
  clip: auto;
  white-space: normal;
}
.skip-link-button {
  left: -999px;
  position: absolute;
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden;
  z-index: -999;
}
.skip-link-button:focus {
  background-color: #fff;
  left: auto;
  top: auto;
  width: auto;
  height: auto;
  overflow: auto;
  padding: 0.5em 1em;
  text-align: center;
  font-size: 1.2em;
  z-index: 999;
}
.clearfix:after {
  content: "";
  display: block;
  clear: both;
}
.list-bare,
.list--stripped {
  padding: 0;
  list-style-type: none;
}
.list-bare li,
.list--stripped li {
  list-style: none;
}
.img-fluid,
.img-responsive {
  display: block;
  max-width: 100%;
  height: auto;
}
.svg-wrapper {
  display: block;
}
.svg-wrapper > svg {
  max-width: 100%;
  height: auto;
  vertical-align: top;
}
.make-full-width {
  width: 100vw;
  position: relative;
  left: 50%;
  transform: translate(-50%);
}
html {
  min-height: 100%;
  font-family: Freesans, Helmet, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-weight: normal;
  color: #555;
  background-color: #FFF;
}
body {
  position: relative;
  min-height: 100vh;
  background-color: #FFF;
  line-height: 1.5;
}
.global-wrapper {
  position: relative;
  height: 100%;
}
.global-wrapper:after {
  content: "";
  display: block;
  clear: both;
}
::-moz-selection {
  color: #000;
  background: #B4D5FF;
  text-shadow: none;
}
::selection {
  color: #000;
  background: #B4D5FF;
  text-shadow: none;
}
body {
  -webkit-tap-highlight-color: transparent;
}
.browser-message {
  display: none;
  max-width: 1140px;
  padding: 3.5% 1em;
  margin: auto auto 1rem;
  background-color: #EECFCF;
  text-align: center;
  line-height: 1.5;
  color: #B94A48;
}
.mod-no-picture .browser-message.browser-outdated-message {
  display: block !important;
}
.mod-no-js .browser-message.browser-no-js-message {
  display: block !important;
}
_:-ms-fullscreen,
:root.mod-no-picture .browser-message.browser-outdated-message {
  display: none !important;
}
@media print {
  *,
  *::before,
  *::after {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  a,
  a:visited {
    text-decoration: underline;
  }
  abbr[title]::after {
    content: " (" attr(title) ")";
  }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }
  thead {
    display: table-header-group;
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  img {
    max-width: 100% !important;
  }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }
  h2,
  h3 {
    page-break-after: avoid;
  }
}
.embed-wrapper {
  position: relative;
  max-width: 100%;
  height: 0;
  padding-top: 56.25%;
  margin-bottom: 1rem;
  overflow: hidden;
}
.embed-wrapper.embed--4x3 {
  padding-top: 75%;
}
.embed-wrapper.embed--anamorphic_widescreen {
  padding-top: 41.84100418%;
}
.embed-wrapper > iframe,
.embed-wrapper .embed-object {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  margin: 0;
}
.full-page-backdrop {
  display: none;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 100;
  min-height: 2000px;
  min-height: 100vh;
  background-color: rgba(51, 51, 51, 0.75);
  animation: fadeIn 0.25s ease;
}
.full-page-backdrop.is-active {
  display: block;
}
.full-page-backdrop.animating-out {
  animation: fadeOut 0.25s ease 0s 1 normal forwards;
}
.island {
  padding: 20px;
  margin-bottom: 20px;
  background-color: transparent;
}
.island:after {
  content: "";
  display: block;
  clear: both;
}
.island > :last-child {
  margin-bottom: 0;
}
.island--highlighted {
  background-color: #F3F3F3;
}
.responsive-table-wrapper {
  max-width: 100%;
  min-height: 0.01%;
  margin-bottom: 1rem;
  overflow: auto;
  overflow-x: auto;
  background-image: linear-gradient(to right, #FFFFFF, rgba(255, 255, 255, 0)), linear-gradient(to left, #FFFFFF, rgba(255, 255, 255, 0)), linear-gradient(to right, #C3C3C3, rgba(195, 195, 195, 0)), linear-gradient(to left, #C3C3C3, rgba(195, 195, 195, 0));
  background-position: 0 0,
		100% 0,
		0 0,
		100% 0;
  background-repeat: no-repeat;
  background-color: white;
  background-size: 4em 100%, 4em 100%, 1em 100%, 1em 100%;
  background-attachment: local,
		local,
		scroll,
		scroll;
}
.responsive-table-wrapper > table {
  width: 100%;
  margin-top: 0;
  margin-bottom: 0;
}
.wrapping-label {
  position: relative;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -ms-flex-align: baseline;
  -webkit-align-items: baseline;
  align-items: baseline;
  overflow: hidden;
  margin-bottom: 0;
  font-size: 0.9rem;
  font-weight: normal;
  -webkit-transition: all 0.1s ease-out;
  transition: all 0.1s ease-out;
}
.wrapping-label input {
  margin-right: -1.45em;
  margin-left: 0.45em;
  font-size: 0.9rem;
}
.wrapping-label .label-contents {
  -ms-flex: 1;
  -webkit-flex: 1;
  flex: 1;
  display: block;
  width: 100%;
  padding: 0.25rem 1rem 0.25rem 2rem;
  -webkit-transition: all 0.12s ease-out;
  transition: all 0.12s ease-out;
}
.wrapping-label.wrapping-label--centered-input {
  -ms-flex-align: center;
  -webkit-align-items: center;
  align-items: center;
}
.wrapping-label.wrapping-label--centered-input input {
  top: -0.1em;
}
.wrapping-label input:focus ~ .label-contents,
.wrapping-label:hover .label-contents {
  background-color: rgba(0, 0, 0, 0.04);
}
.wrapping-label:active {
  background-color: rgba(0, 0, 0, 0.08);
}
.wrapping-label input:checked ~ .label-contents {
  background-color: rgba(32, 79, 60, 0.15);
  text-shadow: 0 0.0625em 0.0625em #fff;
}
.wrapping-label:hover input:checked ~ .label-contents,
.wrapping-label input:checked:focus ~ .label-contents {
  background-color: rgba(32, 79, 60, 0.1);
}
#wpadminbar {
  position: fixed !important;
}
.post-content-wrapper {
  max-width: 1140px;
  margin: 0 auto;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
