/*! {{SITE NAME}} Styles
 * --------------------------------------------------
 */
/* Import Perch Core parts here */
@keyframes pulse {
  50% {
    transform: scale(1.05);
  }
}
@keyframes bigPulse {
  50% {
    transform: scale(1.2);
  }
}
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(-2.77777778em);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes levitate {
  to {
    transform: translateY(-20%);
  }
}
@keyframes full-rotation {
  to {
    transform: rotate(360deg);
  }
}
@keyframes shake {
  from,
  to {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
  10%,
  30%,
  50%,
  70%,
  90% {
    -webkit-transform: translate3d(-0.55555556em, 0, 0);
    transform: translate3d(-0.55555556em, 0, 0);
  }
  20%,
  40%,
  60%,
  80% {
    -webkit-transform: translate3d(0.55555556em, 0, 0);
    transform: translate3d(0.55555556em, 0, 0);
  }
}
@keyframes zoomIn {
  from {
    opacity: 0;
    -webkit-transform: scale3d(0.3, 0.3, 0.3);
    transform: scale3d(0.3, 0.3, 0.3);
  }
  50% {
    opacity: 1;
  }
}
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}
/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}
/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}
/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}
/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}
/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}
/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}
/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}
/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}
/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}
/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}
/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}
/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}
/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}
/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}
/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}
/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}
/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}
/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}
/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}
/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}
/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}
/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}
/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}
/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}
/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}
*,
*::before,
*::after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
:root {
  -moz-tab-size: 4;
  tab-size: 4;
}
body {
  background-color: #FFF;
}
input[type="radio"],
input[type="checkbox"],
input[type="reset"],
input[type="button"],
input[type="submit"],
select,
option,
button,
label[for] {
  cursor: pointer;
}
a,
area,
button,
[role=button],
input:not([type=range]),
label,
select,
summary,
textarea {
  -ms-touch-action: manipulation;
  touch-action: manipulation;
}
button[disabled],
html input[disabled],
select[disabled] {
  opacity: 0.5;
  cursor: default;
  cursor: not-allowed;
}
table {
  border-collapse: collapse;
}
select {
  max-width: 100%;
  margin-left: 0;
}
input[type="search"] {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-appearance: none;
}
input[type="radio"] {
  margin-left: 1px;
  margin-right: 3px;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
input[type="number"] {
  -moz-appearance: textfield;
}
figure {
  margin: 0 0 1em;
}
ul,
ol,
dd,
p,
figure,
pre,
table,
fieldset,
hr,
.content-block {
  margin-top: 0;
  margin-bottom: 1rem;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}
.sr-only-focusable:focus,
.sr-only-focusable:active {
  position: static;
  width: auto;
  height: auto;
  overflow: visible;
  clip: auto;
  white-space: normal;
}
.skip-link-button {
  left: -999px;
  position: absolute;
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden;
  z-index: -999;
}
.skip-link-button:focus {
  background-color: #fff;
  left: auto;
  top: auto;
  width: auto;
  height: auto;
  overflow: auto;
  padding: 0.5em 1em;
  text-align: center;
  font-size: 1.2em;
  z-index: 999;
}
.clearfix:after {
  content: "";
  display: block;
  clear: both;
}
.list-bare,
.list--stripped {
  padding: 0;
  list-style-type: none;
}
.list-bare li,
.list--stripped li {
  list-style: none;
}
.img-fluid,
.img-responsive {
  display: block;
  max-width: 100%;
  height: auto;
}
.svg-wrapper {
  display: block;
}
.svg-wrapper > svg {
  max-width: 100%;
  height: auto;
  vertical-align: top;
}
.make-full-width {
  width: 100vw;
  position: relative;
  left: 50%;
  transform: translate(-50%);
}
html {
  min-height: 100%;
  font-family: Freesans, Helmet, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-weight: normal;
  color: #555;
  background-color: #FFF;
}
body {
  position: relative;
  min-height: 100vh;
  background-color: #FFF;
  line-height: 1.5;
}
.global-wrapper {
  position: relative;
  height: 100%;
}
.global-wrapper:after {
  content: "";
  display: block;
  clear: both;
}
::-moz-selection {
  color: #000;
  background: #B4D5FF;
  text-shadow: none;
}
::selection {
  color: #000;
  background: #B4D5FF;
  text-shadow: none;
}
body {
  -webkit-tap-highlight-color: transparent;
}
.browser-message {
  display: none;
  max-width: 1140px;
  padding: 3.5% 1em;
  margin: auto auto 1rem;
  background-color: #EECFCF;
  text-align: center;
  line-height: 1.5;
  color: #B94A48;
}
.mod-no-picture .browser-message.browser-outdated-message {
  display: block !important;
}
.mod-no-js .browser-message.browser-no-js-message {
  display: block !important;
}
_:-ms-fullscreen,
:root.mod-no-picture .browser-message.browser-outdated-message {
  display: none !important;
}
@media print {
  *,
  *::before,
  *::after {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  a,
  a:visited {
    text-decoration: underline;
  }
  abbr[title]::after {
    content: " (" attr(title) ")";
  }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }
  thead {
    display: table-header-group;
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  img {
    max-width: 100% !important;
  }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }
  h2,
  h3 {
    page-break-after: avoid;
  }
}
.embed-wrapper {
  position: relative;
  max-width: 100%;
  height: 0;
  padding-top: 56.25%;
  margin-bottom: 1rem;
  overflow: hidden;
}
.embed-wrapper.embed--4x3 {
  padding-top: 75%;
}
.embed-wrapper.embed--anamorphic_widescreen {
  padding-top: 41.84100418%;
}
.embed-wrapper > iframe,
.embed-wrapper .embed-object {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  margin: 0;
}
.full-page-backdrop {
  display: none;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 100;
  min-height: 2000px;
  min-height: 100vh;
  background-color: rgba(51, 51, 51, 0.75);
  animation: fadeIn 0.25s ease;
}
.full-page-backdrop.is-active {
  display: block;
}
.full-page-backdrop.animating-out {
  animation: fadeOut 0.25s ease 0s 1 normal forwards;
}
.island {
  padding: 20px;
  margin-bottom: 20px;
  background-color: transparent;
}
.island:after {
  content: "";
  display: block;
  clear: both;
}
.island > :last-child {
  margin-bottom: 0;
}
.island--highlighted {
  background-color: #F3F3F3;
}
.responsive-table-wrapper {
  max-width: 100%;
  min-height: 0.01%;
  margin-bottom: 1rem;
  overflow: auto;
  overflow-x: auto;
  background-image: linear-gradient(to right, #FFFFFF, rgba(255, 255, 255, 0)), linear-gradient(to left, #FFFFFF, rgba(255, 255, 255, 0)), linear-gradient(to right, #C3C3C3, rgba(195, 195, 195, 0)), linear-gradient(to left, #C3C3C3, rgba(195, 195, 195, 0));
  background-position: 0 0,
		100% 0,
		0 0,
		100% 0;
  background-repeat: no-repeat;
  background-color: white;
  background-size: 4em 100%, 4em 100%, 1em 100%, 1em 100%;
  background-attachment: local,
		local,
		scroll,
		scroll;
}
.responsive-table-wrapper > table {
  width: 100%;
  margin-top: 0;
  margin-bottom: 0;
}
.wrapping-label {
  position: relative;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -ms-flex-align: baseline;
  -webkit-align-items: baseline;
  align-items: baseline;
  overflow: hidden;
  margin-bottom: 0;
  font-size: 0.9rem;
  font-weight: normal;
  -webkit-transition: all 0.1s ease-out;
  transition: all 0.1s ease-out;
}
.wrapping-label input {
  margin-right: -1.45em;
  margin-left: 0.45em;
  font-size: 0.9rem;
}
.wrapping-label .label-contents {
  -ms-flex: 1;
  -webkit-flex: 1;
  flex: 1;
  display: block;
  width: 100%;
  padding: 0.25rem 1rem 0.25rem 2rem;
  -webkit-transition: all 0.12s ease-out;
  transition: all 0.12s ease-out;
}
.wrapping-label.wrapping-label--centered-input {
  -ms-flex-align: center;
  -webkit-align-items: center;
  align-items: center;
}
.wrapping-label.wrapping-label--centered-input input {
  top: -0.1em;
}
.wrapping-label input:focus ~ .label-contents,
.wrapping-label:hover .label-contents {
  background-color: rgba(0, 0, 0, 0.04);
}
.wrapping-label:active {
  background-color: rgba(0, 0, 0, 0.08);
}
.wrapping-label input:checked ~ .label-contents {
  background-color: rgba(32, 79, 60, 0.15);
  text-shadow: 0 0.0625em 0.0625em #fff;
}
.wrapping-label:hover input:checked ~ .label-contents,
.wrapping-label input:checked:focus ~ .label-contents {
  background-color: rgba(32, 79, 60, 0.1);
}
#wpadminbar {
  position: fixed !important;
}
.post-content-wrapper {
  max-width: 1140px;
  margin: 0 auto;
}
.main-content {
  padding: 0 5%;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL25vZGVfbW9kdWxlcy9AcmFyZWJpcmRpbmMvcGVyY2gvbGVzcy9icmFpbnMvX2FuaW1hdGlvbnMubGVzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9AcmFyZWJpcmRpbmMvcGVyY2gvbGVzcy9iYXNlbGluZS9fbm9ybWFsaXplLmxlc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvQHJhcmViaXJkaW5jL3BlcmNoL2xlc3MvYmFzZWxpbmUvX3BlcmNoLW5vcm1hbGl6ZS5sZXNzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL0ByYXJlYmlyZGluYy9wZXJjaC9sZXNzL2JyYWlucy9fbWl4aW5zLmxlc3MiLCJwZXJjaC9fcGVyY2gtaGVscGVycy5sZXNzIiwicGVyY2gvX3BlcmNoLWdsb2JhbHMubGVzcyIsIl9zaXRlLWdsb2JhbC12YXJpYWJsZXMubGVzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9AcmFyZWJpcmRpbmMvcGVyY2gvbGVzcy9vdmVycmlkZXMvX2Jyb3dzZXJfbWVzc2FnZXMubGVzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9AcmFyZWJpcmRpbmMvcGVyY2gvbGVzcy9vdmVycmlkZXMvX3ByaW50Lmxlc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvQHJhcmViaXJkaW5jL3BlcmNoL2xlc3MvY29tcG9uZW50cy9fZW1iZWQtd3JhcHBlci5sZXNzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL0ByYXJlYmlyZGluYy9wZXJjaC9sZXNzL2NvbXBvbmVudHMvX2Z1bGwtcGFnZS1iYWNrZHJvcC5sZXNzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL0ByYXJlYmlyZGluYy9wZXJjaC9sZXNzL2NvbXBvbmVudHMvX2lzbGFuZHMubGVzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9AcmFyZWJpcmRpbmMvcGVyY2gvbGVzcy9jb21wb25lbnRzL19yZXNwb25zaXZlLXRhYmxlcy5sZXNzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL0ByYXJlYmlyZGluYy9wZXJjaC9sZXNzL2NvbXBvbmVudHMvX3dyYXBwaW5nLWxhYmVscy5sZXNzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL0ByYXJlYmlyZGluYy9wZXJjaC9sZXNzL2NvbXBvbmVudHMvbGlicmFyeS93b3JkcHJlc3MvX3dwLWFkbWluLWJhci1tb2JpbGUtZml4ZXMubGVzcyIsIl9zaXRlLWxheW91dC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFTQTtFQUNDO0lBQU0sV0FBVyxXQUFYOzs7QUFPUDtFQUNDO0lBQU0sV0FBVyxVQUFYOzs7QUFNUDtFQUNDO0lBQ0MsVUFBQTs7RUFFRDtJQUNDLFVBQUE7OztBQU9GO0VBQ0M7SUFDQyxVQUFBOztFQUVEO0lBQ0MsVUFBQTs7O0FBU0Y7RUFDQztJQUNDLFVBQUE7SUFDQSxXQUFXLHlCQUFYOztFQUVEO0lBQ0MsVUFBQTtJQUNBLFdBQVcsYUFBWDs7O0FBU0Y7RUFDQztJQUNDLFdBQVcsZ0JBQVg7OztBQVdGO0VBQ0M7SUFDQyxXQUFXLGNBQVg7OztBQVNGO0VBQ0M7RUFBTTtJQUNMLG1CQUFtQixvQkFBbkI7SUFDQSxXQUFXLG9CQUFYOztFQUdEO0VBQUs7RUFBSztFQUFLO0VBQUs7SUFDbkIsbUJBQW1CLGdDQUFuQjtJQUNBLFdBQVcsZ0NBQVg7O0VBR0Q7RUFBSztFQUFLO0VBQUs7SUFDZCxtQkFBbUIsK0JBQW5CO0lBQ0EsV0FBVywrQkFBWDs7O0FBU0Y7RUFDQztJQUNDLFVBQUE7SUFDQSxtQkFBbUIsc0JBQW5CO0lBQ0EsV0FBVyxzQkFBWDs7RUFHRDtJQUNDLFVBQUE7Ozs7Ozs7Ozs7QUM5R0Y7RUFDRSxpQkFBQTs7RUFDQSw4QkFBQTs7Ozs7Ozs7QUFVRjtFQUNFLFNBQUE7Ozs7O0FBT0Y7RUFDRSxjQUFBOzs7Ozs7QUFRRjtFQUNFLGNBQUE7RUFDQSxnQkFBQTs7Ozs7Ozs7QUFXRjtFQUNFLHVCQUFBOztFQUNBLFNBQUE7O0VBQ0EsaUJBQUE7Ozs7Ozs7QUFRRjtFQUNFLGlDQUFBOztFQUNBLGNBQUE7Ozs7Ozs7O0FBVUY7RUFDRSw2QkFBQTs7Ozs7O0FBUUYsSUFBSTtFQUNGLG1CQUFBOztFQUNBLDBCQUFBOztFQUNBLGlDQUFBOzs7Ozs7QUFPRjtBQUNBO0VBQ0UsbUJBQUE7Ozs7OztBQVFGO0FBQ0E7QUFDQTtFQUNFLGlDQUFBOztFQUNBLGNBQUE7Ozs7OztBQU9GO0VBQ0UsY0FBQTs7Ozs7O0FBUUY7QUFDQTtFQUNFLGNBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSx3QkFBQTs7QUFHRjtFQUNFLGVBQUE7O0FBR0Y7RUFDRSxXQUFBOzs7Ozs7O0FBVUY7RUFDRSxrQkFBQTs7Ozs7Ozs7QUFXRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0Usb0JBQUE7O0VBQ0EsZUFBQTs7RUFDQSxpQkFBQTs7RUFDQSxTQUFBOzs7Ozs7O0FBUUY7QUFDQTs7RUFDRSxpQkFBQTs7Ozs7O0FBUUY7QUFDQTs7RUFDRSxvQkFBQTs7Ozs7QUFPRjtBQUNBO0FBQ0E7QUFDQTtFQUNFLDBCQUFBOzs7OztBQU9GLE1BQU07QUFDTixlQUFlO0FBQ2YsY0FBYztBQUNkLGVBQWU7RUFDYixrQkFBQTtFQUNBLFVBQUE7Ozs7O0FBT0YsTUFBTTtBQUNOLGVBQWU7QUFDZixjQUFjO0FBQ2QsZUFBZTtFQUNiLDhCQUFBOzs7OztBQU9GO0VBQ0UsOEJBQUE7Ozs7Ozs7O0FBVUY7RUFDRSxzQkFBQTs7RUFDQSxjQUFBOztFQUNBLGNBQUE7O0VBQ0EsZUFBQTs7RUFDQSxVQUFBOztFQUNBLG1CQUFBOzs7Ozs7QUFPRjtFQUNFLHdCQUFBOzs7OztBQU9GO0VBQ0UsY0FBQTs7Ozs7O0FBUUY7QUFDQTtFQUNFLHNCQUFBOztFQUNBLFVBQUE7Ozs7OztBQU9GLGVBQWU7QUFDZixlQUFlO0VBQ2IsWUFBQTs7Ozs7O0FBUUY7RUFDRSw2QkFBQTs7RUFDQSxvQkFBQTs7Ozs7O0FBT0YsZUFBZTtFQUNiLHdCQUFBOzs7Ozs7QUFRRjtFQUNFLDBCQUFBOztFQUNBLGFBQUE7Ozs7Ozs7O0FBVUY7RUFDRSxjQUFBOzs7OztBQU9GO0VBQ0Usa0JBQUE7Ozs7Ozs7QUFVRjtFQUNFLGFBQUE7Ozs7O0FBT0Y7RUFDRSxhQUFBOztBQ2pWRjtBQUNBLENBQUM7QUFDRCxDQUFDO0VDOGRBLDhCQUFBO0VBQ0csMkJBQUE7RUFDSyxzQkFBQTs7QUR4ZFQ7RUFDQyxnQkFBQTtFQUNBLFdBQUE7O0FBTUQ7RUFDQyxzQkFBQTs7QUFNRCxLQUFLO0FBQ0wsS0FBSztBQUNMLEtBQUs7QUFDTCxLQUFLO0FBQ0wsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7RUFDSixlQUFBOztBQU1EO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxJQUFJO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7RUFDQyw4QkFBQTtFQUNJLDBCQUFBOztBQU1MLE1BQU07QUFDTixJQUFLLE1BQUs7QUFDVixNQUFNO0VBQ0wsWUFBQTtFQUNBLGVBQUE7RUFDQSxtQkFBQTs7QUFNRDtFQUNDLHlCQUFBOztBQU1EO0VBQ0MsZUFBQTtFQUNBLGNBQUE7O0FBTUQsS0FBSztFQzhZSiw4QkFBQTtFQUNHLDJCQUFBO0VBQ0ssc0JBQUE7RUQ1WVIsd0JBQUE7O0FBTUQsS0FBSztFQUFpQixnQkFBQTtFQUFrQixpQkFBQTs7QUFLeEMsS0FBSyxlQUFlO0FBQ3BCLEtBQUssZUFBZTtFQUNuQix3QkFBQTtFQUNBLFNBQUE7O0FBRUQsS0FBSztFQUNKLDBCQUFBOztBQVFEO0VBRUMsZUFBQTs7QUFnQkQ7QUFBSTtBQUFJO0FBQ1I7QUFBRztBQUNIO0FBQUs7QUFBTztBQUFVO0FBQ3RCO0VBQ0MsYUFBQTtFQUNBLG1CQUFBOztBRXRIRDtFQUNFLGtCQUFBO0VBQ0EsVUFBQTtFQUNBLFdBQUE7RUFDQSxVQUFBO0VBQ0EsZ0JBQUE7RUFDQSxNQUFNLGdCQUFOO0VBQ0EsbUJBQUE7RUFDQSxTQUFBOztBQUVGLGtCQUFrQjtBQUNsQixrQkFBa0I7RUFDaEIsZ0JBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0EsVUFBQTtFQUNBLG1CQUFBOztBQUdGO0VBQ0UsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLFVBQUE7RUFDQSxXQUFBO0VBQ0EsZ0JBQUE7RUFDQSxhQUFBOztBQUNBLGlCQUFDO0VBQ0Msc0JBQUE7RUFDQSxVQUFBO0VBQ0EsU0FBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtFQUNBLFlBQUE7O0FEaERILFNBQUM7RUFDQSxTQUFTLEVBQVQ7RUFDQSxjQUFBO0VBQ0EsV0FBQTs7QUNtRUY7QUFFQTtFRG5EQyxVQUFBO0VBQ0EscUJBQUE7O0FDZ0RELFVEOUNDO0FDZ0RELGVEaERDO0VBQ0MsZ0JBQUE7O0FDa0dGO0FBQ0E7RUFDRSxjQUFBO0VBQ0EsZUFBQTtFQUNBLFlBQUE7O0FBT0Y7RUFDRSxjQUFBOztBQURGLFlBR0U7RUFDRSxlQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBOztBQW1DSjtFQUVFLFlBQUE7RUFFQSxrQkFBQTtFQUVBLFNBQUE7RUFFQSxXQUFXLGVBQVg7O0FDdkxGO0VBQ0UsZ0JBQUE7RUFFQSwyQ0NSa0QscUJBQXFCLGtCQUFrQixtQkFBbUIsa0JEUTVHO0VBRUEsbUJBQUE7RUFDQSxXQUFBO0VBRUEsc0JBQUE7O0FBb0JGO0VBQ0Usa0JBQUE7RUFFQSxpQkFBQTtFQUVBLHNCQUFBO0VBRUEsZ0JBQUE7O0FBSUY7RUFFRSxrQkFBQTtFQUNBLFlBQUE7O0FGMUNELGVBQUM7RUFDQSxTQUFTLEVBQVQ7RUFDQSxjQUFBO0VBQ0EsV0FBQTs7QUVpREY7RUFBbUIsV0FBQTtFQUE4QixtQkFBQTtFQUFpQyxpQkFBQTs7QUFDbEY7RUFBa0IsV0FBQTtFQUE4QixtQkFBQTtFQUFpQyxpQkFBQTs7QUFJakY7RUFBTSx3Q0FBQTs7QUVuRE47RUFDQyxhQUFBO0VBRUEsaUJBQUE7RUFDQSxpQkFBQTtFQUNBLHNCQUFBO0VBRUEseUJBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EsY0FBQTs7QUFhQyxlQUFnQixpQkFUaEI7RUFVQyx5QkFBQTs7QUFtQkQsVUFBVyxpQkFGWDtFQUdDLHlCQUFBOztBQVFILENBQUM7QUFBaUIsS0FBSyxlQUFnQixpQkFBZ0I7RUFBNEIsd0JBQUE7O0FDcEVuRjtFQUNDO0VBQ0EsQ0FBQztFQUNELENBQUM7SUFDQSxrQ0FBQTtJQUNBLFdBQUE7SUFDQSwyQkFBQTtJQUNBLDRCQUFBOztFQUdEO0VBQ0EsQ0FBQztJQUNBLDBCQUFBOztFQU9ELElBQUksT0FBTztJQUNWLFNBQVMsS0FBSyxZQUFZLEdBQTFCOztFQWFEO0VBQ0E7SUFDQyxzQkFBQTtJQUNBLHdCQUFBOztFQVFEO0lBQ0MsMkJBQUE7O0VBR0Q7RUFDQTtJQUNDLHdCQUFBOztFQUdEO0lBQ0MsMEJBQUE7O0VBR0Q7RUFDQTtFQUNBO0lBQ0MsVUFBQTtJQUNBLFNBQUE7O0VBR0Q7RUFDQTtJQUNDLHVCQUFBOzs7QUNsRUY7RUFDQyxrQkFBQTtFQUNBLGVBQUE7RUFDQSxTQUFBO0VBRUEsbUJBQUE7RUFDQSxtQkFBQTtFQUNBLGdCQUFBOztBQUtBLGNBQUM7RUFDQSxnQkFBQTs7QUFHRCxjQUFDO0VBQ0EseUJBQUE7O0FBakJGLGNBcUJDO0FBckJELGNBc0JDO0VBQ0Msa0JBQUE7RUFDQSxNQUFBO0VBQ0EsT0FBQTtFQUVBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsU0FBQTs7QUNwQkY7RUFDQyxhQUFBO0VBRUEsZUFBQTtFQUNBLE1BQUE7RUFDQSxRQUFBO0VBQ0EsU0FBQTtFQUNBLE9BQUE7RUFDQSxZQUFBO0VBRUEsa0JBQUE7RUFDQSxpQkFBQTtFQUVBLHdDQUFBO0VBRUEsNEJBQUE7O0FBRUEsbUJBQUM7RUFDQSxjQUFBOztBQUdELG1CQUFDO0VBQ0Esa0RBQUE7O0FDcEJGO0VBRUMsYUFBQTtFQUNBLG1CQUFBO0VBRUEsNkJBQUE7O0FSTkEsT0FBQztFQUNBLFNBQVMsRUFBVDtFQUNBLGNBQUE7RUFDQSxXQUFBOztBUUZGLE9BUUM7RUFDQyxnQkFBQTs7QUFNRjtFQUNDLHlCQUFBOztBQ2ZEO0VBS0MsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsbUJBQUE7RUFDQSxjQUFBO0VBR0EsZ0JBQUE7RUFDQSxrQkFDQyw0REFDQSwyREFDQSw0REFDQSx5REFKRDtFQUtBOzs7UUFBQTtFQUtBLDRCQUFBO0VBQ0EsdUJBQUE7RUFDQSx1REFBQTtFQUtBOzs7UUFBQTs7QUE3QkQseUJBbUNDO0VBQ0MsV0FBQTtFQUVBLGFBQUE7RUFDQSxnQkFBQTs7QUNiRjtFQUNDLGtCQUFBO0VWOGVBLG9CQUFBO0VBQ0EscUJBQUE7RUFDQSxhQUFBO0VBdUJLLHdCQUFBO0VBQ0wsNkJBQUE7RUFDUSxxQkFBQTtFVXRnQlIsZ0JBQUE7RUFDQSxnQkFBQTtFQUVBLGlCQUFBO0VBQ0EsbUJBQUE7RVYyY0EscUNBQUE7RUFDUSw2QkFBQTs7QVVwZFQsZUFhQztFQUNDLHFCQUFBO0VBQ0EsbUJBQUE7RUFFQSxpQkFBQTs7QUFqQkYsZUFtQkM7RVZzZ0JJLFdBQUE7RUFDSixlQUFBO0VBQ1EsT0FBQTtFVXJnQlAsY0FBQTtFQUNBLFdBQUE7RUFDQSxrQ0FBQTtFVjJiRCxzQ0FBQTtFQUNRLDhCQUFBOztBVXZiUixlQUFDO0VWMmVJLHNCQUFBO0VBQ0wsMkJBQUE7RUFDUSxtQkFBQTs7QVU3ZVIsZUFBQywrQkFDQTtFQUNDLFdBQUE7O0FBL0JILGVBc0NDLE1BQUssTUFBTztBQUNaLGVBQUMsTUFBTztFQUNQLHFDQUFBOztBQUVELGVBQUM7RUFDQSxxQ0FBQTs7QUEzQ0YsZUE2Q0MsTUFBSyxRQUFTO0VBQ2Isd0NBQUE7RUFDQSxxQ0FBQTs7QUFFRCxlQUFDLE1BQU8sTUFBSyxRQUFTO0FBakR2QixlQWtEQyxNQUFLLFFBQVEsTUFBTztFQUNuQix1Q0FBQTs7QUMxRkY7RUFDQyxlQUFBOztBQ1VEO0VBQ0UsaUJBQUE7RUFDQSxjQUFBOztBQUdGO0VBQ0UsYUFBQSIsInNvdXJjZXNDb250ZW50IjpbIi8vXG4vLyBBbmltYXRpb25zXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIFwiUHVsc2VcIiBhbmltYXRpb24gZm9yIGZvY3VzIGFzc2lzdGFuY2Vcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuQGFuaW1hdGlvbi1wdWxzZVNpemU6IDEuMDU7XG5cbkBrZXlmcmFtZXMgcHVsc2Uge1xuXHQ1MCUgeyB0cmFuc2Zvcm06IHNjYWxlKCBAYW5pbWF0aW9uLXB1bHNlU2l6ZSApOyB9XG59XG5cbi8vIEJpZyBwdWxzZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbkBhbmltYXRpb24tYmlnUHVsc2VTaXplOiAxLjI7XG5cbkBrZXlmcmFtZXMgYmlnUHVsc2Uge1xuXHQ1MCUgeyB0cmFuc2Zvcm06IHNjYWxlKCBAYW5pbWF0aW9uLWJpZ1B1bHNlU2l6ZSApOyB9XG59XG5cblxuLy8gRmFkZSBJbiBBbmltYXRpb25cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuQGtleWZyYW1lcyBmYWRlSW4ge1xuXHRmcm9tIHtcblx0XHRvcGFjaXR5OiAwO1xuXHR9XG5cdHRvIHtcblx0XHRvcGFjaXR5OiAxO1xuXHR9XG59XG5cblxuLy8gRmFkZSBPdXQgQW5pbWF0aW9uXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbkBrZXlmcmFtZXMgZmFkZU91dCB7XG5cdGZyb20ge1xuXHRcdG9wYWNpdHk6IDE7XG5cdH1cblx0dG8ge1xuXHRcdG9wYWNpdHk6IDA7XG5cdH1cbn1cblxuXG4vLyBGYWRlIEluICYgVXAgQW5pbWF0aW9uXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbkBhbmltYXRpb24tZmFkZUluVXAteS1kaXN0YW5jZTogLSh1bml0KCg1MCAvIEBmb250LXNpemUtYmFzZSksIGVtKSk7XG5cbkBrZXlmcmFtZXMgZmFkZUluVXAge1xuXHRmcm9tIHtcblx0XHRvcGFjaXR5OiAwO1xuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWShAYW5pbWF0aW9uLWZhZGVJblVwLXktZGlzdGFuY2UpO1xuXHR9XG5cdHRvIHtcblx0XHRvcGFjaXR5OiAxO1xuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcblx0fVxufVxuXG5cbi8vIFwiTGV2aXRhdGVcIiBvYmplY3QgYW5pbWF0aW9uXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbkBhbmltYXRpb24tbGV2aXRhdGUteS1kaXN0YW5jZTogLTIwJTtcblxuQGtleWZyYW1lcyBsZXZpdGF0ZSB7XG5cdHRvIHtcblx0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoQGFuaW1hdGlvbi1sZXZpdGF0ZS15LWRpc3RhbmNlKTtcblx0fVxufVxuXG4vLyBVc2FnZTpcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBhbmltYXRpb246IGxldml0YXRlIDNzIGVhc2UgMHMgaW5maW5pdGUgYWx0ZXJuYXRlIGJvdGg7XG5cblxuLy8gUm90YXRlIGZ1bGwgMzYwIGRlZ3JlZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuQGtleWZyYW1lcyBmdWxsLXJvdGF0aW9uIHtcblx0dG8ge1xuXHRcdHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG5cdH1cbn1cblxuXG4vLyBTaGFrZSBhbmltYXRpb25cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuQGFuaW1hdGlvbi1zaGFrZS14LWRpc3RhbmNlOiB1bml0KCgxMCAvIEBmb250LXNpemUtYmFzZSksIGVtKTsgLy8gfj0gMTBweFxuXG5Aa2V5ZnJhbWVzIHNoYWtlIHtcblx0ZnJvbSwgdG8ge1xuXHRcdC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcblx0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuXHR9XG5cblx0MTAlLCAzMCUsIDUwJSwgNzAlLCA5MCUge1xuXHRcdC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtKEBhbmltYXRpb24tc2hha2UteC1kaXN0YW5jZSksIDAsIDApO1xuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLShAYW5pbWF0aW9uLXNoYWtlLXgtZGlzdGFuY2UpLCAwLCAwKTtcblx0fVxuXG5cdDIwJSwgNDAlLCA2MCUsIDgwJSB7XG5cdFx0LXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKChAYW5pbWF0aW9uLXNoYWtlLXgtZGlzdGFuY2UpLCAwLCAwKTtcblx0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKChAYW5pbWF0aW9uLXNoYWtlLXgtZGlzdGFuY2UpLCAwLCAwKTtcblx0fVxufVxuXG5cbi8vIFpvb20gSW4gYW5pbWF0aW9uXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbkBhbmltYXRpb24tem9vbUluLXN0YXJ0aW5nLXNjYWxlOiAuMztcblxuQGtleWZyYW1lcyB6b29tSW4ge1xuXHRmcm9tIHtcblx0XHRvcGFjaXR5OiAwO1xuXHRcdC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKEBhbmltYXRpb24tem9vbUluLXN0YXJ0aW5nLXNjYWxlLCBAYW5pbWF0aW9uLXpvb21Jbi1zdGFydGluZy1zY2FsZSwgQGFuaW1hdGlvbi16b29tSW4tc3RhcnRpbmctc2NhbGUpO1xuXHRcdHRyYW5zZm9ybTogc2NhbGUzZChAYW5pbWF0aW9uLXpvb21Jbi1zdGFydGluZy1zY2FsZSwgQGFuaW1hdGlvbi16b29tSW4tc3RhcnRpbmctc2NhbGUsIEBhbmltYXRpb24tem9vbUluLXN0YXJ0aW5nLXNjYWxlKTtcblx0fVxuXG5cdDUwJSB7XG5cdFx0b3BhY2l0eTogMTtcblx0fVxufVxuIiwiLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKiBEb2N1bWVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cbiAqL1xuXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcbiAqIFJlbmRlciB0aGUgYG1haW5gIGVsZW1lbnQgY29uc2lzdGVudGx5IGluIElFLlxuICovXG5cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cbiAgaGVpZ2h0OiAwOyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDsgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7IC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgbWFyZ2luOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cbiAqL1xuXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG59XG5cbi8qIEludGVyYWN0aXZlXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cbiAqL1xuXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogTWlzY1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXG4gKi9cblxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxuICovXG5cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbiIsIi8vXG4vLyBQZXJjaCBOb3JtYWxpemVcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAqXHRDdXN0b20gTm9ybWFsaXphdGlvbiArIHJlc2V0cywgZXh0ZW5kaW5nIG5vcm1hbGl6ZS5jc3Ncbi8vICpcdE9waW5pb25hdGVkIHlldCBjb25zaWRlcmVkIHJlc2V0cy5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gQm94IG1vZGVsIGNoYW5nZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qLFxuKjo6YmVmb3JlLFxuKjo6YWZ0ZXIge1xuXHQuYm94LXNpemluZyAoYm9yZGVyLWJveCk7XG59XG5cdC8vIFRoZXJlJ3MgYW4gaWRlYSBtYWtpbmcgdGhlIHJvdW5kcywgbWFkZSBpdCBpbnRvIEJTNCAobWF5YmUgQlMzIHRvbykgdGhhdCBhbGwgaXRlbXMgc2hvdWxkIGluaGVyaXQgYm94LXNpemluZywgc28gc2V0dGluZyBpdCBvbiBhIHBhcmVudCBlbGVtZW50IHdpbGwgYXV0b21hdGljYWxseSByZXNldCBpdCBmb3IgYWxsIGNoaWxkcmVuLiBUbyBtZSBpdCBkb2Vzbid0IG1ha2Ugc2Vuc2UgdG8gZG8gdGhpcy4gSWYgSSB3YW50IGl0IHRvIGluaGVyaXQgb24gYSBjb21wb25lbnQgb3IgdGhpcmQgcGFydHkgcGx1Z2luLCBJJ2QgcmF0aGVyIG1hbnVhbGx5IHNwZWNpZnkgdGhhdC4gQnV0IEknbSBvcGVuIGZvciBkZWJhdGUuIOKAlCBAa19iYXYgfCBPY3RvYmVyIDE2LCAyMDE1XG5cblxuLy8gTW9yZSBSZWFkYWJsZSB0YWIgc2l6ZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG46cm9vdCB7XG5cdC1tb3otdGFiLXNpemU6IDQ7XG5cdHRhYi1zaXplOiA0O1xufVxuXG5cbi8vIEJvZHlcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuYm9keSB7XG5cdGJhY2tncm91bmQtY29sb3I6ICNGRkY7IC8vIElmIHRoaXMgaXMgbm90IHNldCwgSUUgYW5kIEVkZ2Ugb24gV2luZG93cyB3aWxsIHVzZSB0aGUgZGVmYXVsdCB3aW5kb3cgYmFja2dyb3VuZCBjb2xvciDigJQgYSBncmF5LiBFd3cuXG59XG5cblxuLy8gQ2xpY2thYmxlIGVsZW1lbnRzIGdldCBhcHByb3ByaWF0ZSBjdXJzb3Jcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuaW5wdXRbdHlwZT1cInJhZGlvXCJdLFxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLFxuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuaW5wdXRbdHlwZT1cImJ1dHRvblwiXSxcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0sXG5zZWxlY3QsXG5vcHRpb24sXG5idXR0b24sXG5sYWJlbFtmb3JdIHtcblx0Y3Vyc29yOiBwb2ludGVyO1xufVxuXG5cbi8vIFJlbW92ZSBUYXAgRGVsYXlcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuYSxcbmFyZWEsXG5idXR0b24sXG5bcm9sZT1idXR0b25dLFxuaW5wdXQ6bm90KFt0eXBlPXJhbmdlXSksXG5sYWJlbCxcbnNlbGVjdCxcbnN1bW1hcnksXG50ZXh0YXJlYSB7XG5cdC1tcy10b3VjaC1hY3Rpb246IG1hbmlwdWxhdGlvbjtcblx0ICAgIHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xufVxuXG5cbi8vIERpc2FibGVkIHN0YXRlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0sXG5zZWxlY3RbZGlzYWJsZWRdIHtcblx0b3BhY2l0eTogLjU7XG5cdGN1cnNvcjogZGVmYXVsdDtcblx0Y3Vyc29yOiBub3QtYWxsb3dlZDtcbn1cblxuXG4vLyBUYWJsZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxudGFibGUge1xuXHRib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyAvLyBQcmV2ZW50IGRvdWJsZSBib3JkZXJzXG59XG5cblxuLy8gU2VsZWN0IGVsZW1lbnQgb3ZlcnJpZGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbnNlbGVjdCB7XG5cdG1heC13aWR0aDogMTAwJTtcblx0bWFyZ2luLWxlZnQ6IDA7XG59XG5cblxuLy8gU2VhcmNoIGVsZW1lbnRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG5cdC8vIFJlLXJlc2V0IHRoaXMuIE5vcm1hbGl6ZS5DU1MgcmVzZXRzIHRoaXMgdG8gY29udGVudC1ib3g7IHdlIHdhbnQgZXZlcnl0aGluZyB0byBiZSBib3JkZXItYm94LlxuXHQuYm94LXNpemluZyAoYm9yZGVyLWJveCk7XG5cdC8vIFJlbW92ZSB0aGUgcm91bmRlZCBzZWFyY2ggYm94IHdpdGggc2VhcmNoIGljb24gZGVmYXVsdCBzdHlsaW5nXG5cdC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuXG4vLyBSYWRpbyBpbnB1dCBzdHlsaW5nIG92ZXJyaWRlcyBmb3IgcG9zaXRpb25cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuaW5wdXRbdHlwZT1cInJhZGlvXCJdIHsgbWFyZ2luLWxlZnQ6IDFweDsgbWFyZ2luLXJpZ2h0OiAzcHg7IH1cblxuXG4vLyBOdW1iZXIgaW5wdXRzIC0tIHJlbW92ZSBzcGluYm94L3NwaW4gYnV0dG9uc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG5cdC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcblx0bWFyZ2luOiAwO1xufVxuaW5wdXRbdHlwZT1cIm51bWJlclwiXSB7XG5cdC1tb3otYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xufVxuXG5cbi8vIEJldHRlciBmaWd1cmUgZWxlbWVudCBkZWZhdWx0c1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBSZXNldCBtYXJnaW4gaGVyZSBmcm9tIGJyb3dzZXIgZGVmYXVsdC4gV291bGQgcmF0aGVyIHRoZSBsZWZ0IGFuZCByaWdodCBtYXJnaW5zIGRlZmF1bHQgdG8gemVybyB0aGFuIGEgbWFnaWMgcGl4ZWwgbnVtYmVyLiDigJQ+IEtCIDIwMTktMDEtMjJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuZmlndXJlIHtcblx0Ly8gZGlzcGxheTogYmxvY2s7IC8vIDwtLSBkZWZhdWx0IGluIE5vcm1hbGl6ZVxuXHRtYXJnaW46IDAgMCAxZW07XG59XG5cblxuXG4vLyBDb21tb24gZWxlbWVudCBsYXlvdXRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBWYXJpYWJsZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5AY29tbW9uLWVsZW1lbnQtbWFyZ2luLXRvcDogXHRcdDA7XG5AY29tbW9uLWVsZW1lbnQtbWFyZ2luLWJvdHRvbTogXHRcdEBjb21tb24tdmVydGljYWwtZ3V0dGVyO1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gU3R5bGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxudWwsIG9sLCBkZCxcbnAsIGZpZ3VyZSxcbnByZSwgdGFibGUsIGZpZWxkc2V0LCBocixcbi5jb250ZW50LWJsb2NrIHtcblx0bWFyZ2luLXRvcDogICAgQGNvbW1vbi1lbGVtZW50LW1hcmdpbi10b3A7XG5cdG1hcmdpbi1ib3R0b206IEBjb21tb24tZWxlbWVudC1tYXJnaW4tYm90dG9tO1xufVxuIiwiLy9cbi8vIE1peGluc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vID09PUlOREVYPT09XG4vLyAxLiBCYXNpYyBmdW5jdGlvbmFsIG1peGluc1xuLy8gMi4gQWR2YW5jZWQgZnVuY3Rpb25hbCBtaXhpbnNcbi8vIDMuIE11bHRpLXZlbmRvci1wcmVmaXggbWl4aW5zXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIDEuIEJhc2ljIGZ1bmN0aW9uYWwgbWl4aW5zXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBGbG9hdCBjbGVhcmluZ1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4uY2xlYXJfZmxvYXQoKSB7XG5cdCY6YWZ0ZXIge1xuXHRcdGNvbnRlbnQ6IFwiXCI7XG5cdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0Y2xlYXI6IGJvdGg7XG5cdH1cbn1cblxuXG4vLyBQcmV2ZW50IGJvdHRvbSBtYXJnaW4gY29sbGFwc2Vcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLnByZXZlbnQtYm90dG9tLW1hcmdpbi1jb2xsYXBzZSgpIHtcblx0JjphZnRlciB7XG5cdFx0Y29udGVudDogXCJcIjtcblx0XHRkaXNwbGF5OiB0YWJsZTtcblx0fVxufVxuXG5cbi8vIFN0cmlwICh1bilvcmRlcmVkIGxpc3QgZGVmYXVsdCBzdHlsaW5nXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi5zdHJpcF9saXN0KCkge1xuXHRwYWRkaW5nOiAwO1xuXHRsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG5cblx0bGkge1xuXHRcdGxpc3Qtc3R5bGU6IG5vbmU7XG5cdH1cbn1cblxuXG4vLyBIYXJkd2FyZSBBY2NlbGVyYXRpb25cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8g4pig4pig4pig4pigIERFUFJFQ0FURUQg4pig4pig4pig4pigXG4vLyBEZXByZWNhdGVkIGJlY2F1c2U6XG4vLyAgLSBIYXJkd2FyZSBhY2NlbGVyYXRpb24gc2hvdWxkIG5vdCBiZSBhIGJ1aWx0LWluIHRvb2wsIHNpbmNlIGl04oCZcyB0aGUgd3JvbmcgcGF0aCB0byBoZWFkIGRvd24gZm9yIHNtb290aCBjb21wb3NpdGluZy4gU28gbG9uZyBhcyB0aGUgYXBwcm9wcmlhdGUgc3R5bGVzIGFyZSBiZWluZyB0cmFuc2l0aW9uZWQvYW5pbWF0ZWQsIHRoZXJlIHNob3VsZCBiZSBkZWNlbnQgcGVyZm9ybWFuY2Vcbi8vID4gPiA+ID4gPiA+ID4gPiA+ID4gPiA+ID4gPiA+ID4gPiA+ID4gPiA+ID4gPiA+IFxuLmhhcmR3YXJlLWFjY2VsZXJhdGUoKSB7XG5cdC8vIHNlZSBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzEwMDE0NDYxL3doeS1kb2VzLWVuYWJsaW5nLWhhcmR3YXJlLWFjY2VsZXJhdGlvbi1pbi1jc3MzLXNsb3ctZG93bi1wZXJmb3JtYW5jZT9ycT0xXG5cdC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuXHRiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG5cdC13ZWJraXQtcGVyc3BlY3RpdmU6IDEwMDBweDtcblx0cGVyc3BlY3RpdmU6IDEwMDBweDtcblx0Ly8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjYzNzE4MDcvNDQ4Njg1N1xuXHQudHJhbnNmb3JtKHRyYW5zbGF0ZTNkKDAsMCwwKSk7XG59XG4vLyA8IDwgPCA8IDwgPCA8IDwgPCA8IDwgPCA8IDwgPCA8IDwgPCA8IDwgPCA8IDwgPCBcbi8vIGVuZCBkZXByZWNhdGVkIGNvZGUg4pig4pig4pig4pigXG5cblxuLy8gRm9udCBTbW9vdGhpbmcgJiBVbnNtb290aGluZ1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4uZm9udC1zbW9vdGhpbmcoKSB7XG5cdC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuXHQtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xufVxuLmZvbnQtdW5zbW9vdGhpbmcoKSB7XG5cdC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGF1dG87XG5cdC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBhdXRvO1xufVxuXG5cbi8vIFR1cm4gb24gZm9udCBrZXJuaW5nXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi5rZXJuLW1lKCkge1xuXHR0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5O1xuXHRmb250LWZlYXR1cmUtc2V0dGluZ3M6IFwia2VyblwiO1xuXHQtd2Via2l0LWZvbnQtZmVhdHVyZS1zZXR0aW5nczogXCJrZXJuXCI7XG5cdGZvbnQtZmVhdHVyZS1zZXR0aW5nczogXCJrZXJuXCIgMTtcblx0Zm9udC1rZXJuaW5nOiBub3JtYWw7XG59XG5cblxuLy8gQWRkIEJyb3dzZXIgRm9jdXMgT3V0bGluZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4uYWRkLWJyb3dzZXItZm9jdXMtb3V0bGluZSgpIHtcblx0b3V0bGluZS13aWR0aDogMnB4O1xuXHRvdXRsaW5lLXN0eWxlOiBzb2xpZDtcblx0b3V0bGluZS1jb2xvcjogSGlnaGxpZ2h0O1xuXG5cdEBzdXBwb3J0cyAob3V0bGluZS1jb2xvcjogLXdlYmtpdC1mb2N1cy1yaW5nLWNvbG9yKSB7XG5cdFx0b3V0bGluZS1jb2xvcjogLXdlYmtpdC1mb2N1cy1yaW5nLWNvbG9yO1xuXHRcdG91dGxpbmUtc3R5bGU6IGF1dG87XG5cdH1cbn1cblxuXG5cbi8vIDIuIEJhc2ljIGZ1bmN0aW9uYWwgbWl4aW5zXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBCYWNrZ3JvdW5kIGNsaXAgZm9yIHRleHQgbWl4aW5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQmFzZWQgb24gRGl2eWEncyBwdXJlIENTUyBzb2x1dGlvbjpcbi8vIGh0dHA6Ly9uaW1idXBhbmkuY29tL3VzaW5nLWJhY2tncm91bmQtY2xpcC1mb3ItdGV4dC13aXRoLWNzcy1mYWxsYmFjay5odG1sXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi5jbGlwLXRleHQtd2l0aC1saW5lYXItZ3JhZGllbnQoQHRvcC1jb2xvcjogIzAwMCwgQGJvdHRvbS1jb2xvcjogIzU1NSwgQGZhbGxiYWNrLWNvbG9yOiAjMDAwKSB7XG5cdGNvbG9yOiBAZmFsbGJhY2stY29sb3I7XG5cdC13ZWJraXQtdGV4dC1maWxsLWNvbG9yOiB0cmFuc3BhcmVudDtcblx0YmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoQHRvcC1jb2xvciwgQGJvdHRvbS1jb2xvcik7XG5cdGJhY2tncm91bmQ6IC1vLWxpbmVhci1ncmFkaWVudChAdG9wLWNvbG9yLCBAYm90dG9tLWNvbG9yKTtcblx0LXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6IHRleHQ7XG59XG4uY2xpcC10ZXh0LXdpdGgtaW1hZ2UoQGltZy11cmwsIEBmYWxsYmFjay1jb2xvcjogIzAwMCkge1xuXHRjb2xvcjogQGZhbGxiYWNrLWNvbG9yO1xuXHQtd2Via2l0LXRleHQtZmlsbC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cdGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRyYW5zcGFyZW50LCB0cmFuc3BhcmVudCksXG5cdCAgICAgICAgICAgIHVybChAaW1nLXVybCkgcmVwZWF0O1xuXHRiYWNrZ3JvdW5kOiAtby1saW5lYXItZ3JhZGllbnQodHJhbnNwYXJlbnQsIHRyYW5zcGFyZW50KTtcblx0LXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6IHRleHQ7XG59XG5cblxuLy8gTEVTUyBRdWFudGl0eSBxdWVyaWVzIVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBxdWFudGl0eS1xdWVyaWVzLmxlc3Ncbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hZGpvaG5zb245MTYvcXVhbnRpdHktcXVlcmllcy5sZXNzXG4vLyBDb25jZXB0OiBodHRwOi8vYWxpc3RhcGFydC5jb20vYXJ0aWNsZS9xdWFudGl0eS1xdWVyaWVzLWZvci1jc3Ncbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLl9idWlsZC1xdWFudGl0eS1zZWxlY3RvcihAc2VsZWN0b3ItYXBwZW5kLCBAc2VsZWN0b3Itc2libGluZykge1xuXHQmQHtzZWxlY3Rvci1hcHBlbmR9LFxuXHQmQHtzZWxlY3Rvci1hcHBlbmR9IH4gQHtzZWxlY3Rvci1zaWJsaW5nfSB7XG5cdFx0QHJ1bGVzKCk7XG5cdH1cbn1cbi8vXG4ucXVhbnRpdHktZXhhY3RseShAY291bnQsIEBzZWxlY3Rvci1zaWJsaW5nLCBAcnVsZXMpIHtcblx0QHNlbGVjdG9yLWFwcGVuZDogZShcIjpudGgtbGFzdC1jaGlsZChAe2NvdW50fSk6Zmlyc3QtY2hpbGRcIik7XG5cdC5fYnVpbGQtcXVhbnRpdHktc2VsZWN0b3IoQHNlbGVjdG9yLWFwcGVuZCwgQHNlbGVjdG9yLXNpYmxpbmcpO1xufVxuXG4ucXVhbnRpdHktYXQtbGVhc3QoQGNvdW50LCBAc2VsZWN0b3Itc2libGluZywgQHJ1bGVzKSB7XG5cdEBzZWxlY3Rvci1hcHBlbmQ6IGUoXCI6bnRoLWxhc3QtY2hpbGQobitAe2NvdW50fSlcIik7XG5cdC5fYnVpbGQtcXVhbnRpdHktc2VsZWN0b3IoQHNlbGVjdG9yLWFwcGVuZCwgQHNlbGVjdG9yLXNpYmxpbmcpO1xufVxuXG4ucXVhbnRpdHktYXQtbW9zdChAY291bnQsIEBzZWxlY3Rvci1zaWJsaW5nLCBAcnVsZXMpIHtcblx0QHNlbGVjdG9yLWFwcGVuZDogZShcIjpudGgtbGFzdC1jaGlsZCgtbitAe2NvdW50fSk6Zmlyc3QtY2hpbGRcIik7XG5cdC5fYnVpbGQtcXVhbnRpdHktc2VsZWN0b3IoQHNlbGVjdG9yLWFwcGVuZCwgQHNlbGVjdG9yLXNpYmxpbmcpO1xufVxuXG4ucXVhbnRpdHktYmV0d2VlbihAZmlyc3QsIEBsYXN0LCBAc2VsZWN0b3Itc2libGluZywgQHJ1bGVzKSB7XG5cdEBzZWxlY3Rvci1hcHBlbmQ6IGUoXCI6bnRoLWxhc3QtY2hpbGQobitAe2ZpcnN0fSk6bnRoLWxhc3QtY2hpbGQoLW4rQHtsYXN0fSk6Zmlyc3QtY2hpbGRcIik7XG5cdC5fYnVpbGQtcXVhbnRpdHktc2VsZWN0b3IoQHNlbGVjdG9yLWFwcGVuZCwgQHNlbGVjdG9yLXNpYmxpbmcpO1xufVxuLy8gVXNhZ2UgZXhhbXBsZTpcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBOb3RlIC0tLT5cbi8vIDEuIElmIHVzaW5nIGEgY2xhc3MsIHRoZSBlbGVtZW50IG5lZWRzIFwiZXNjYXBlZFwiXG4vLyAgICBzbyBhcyB0byBub3QgY29uZnVzZSBMRVNTXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy9cbi8vIC8vIDYgZWxlbWVudHMgb3IgZ3JlYXRlclxuLy8gLmZvbyB7XG4vLyAgICAgLnF1YW50aXR5LWF0LWxlYXN0KDYsIH5cIi5mb29cIiwge1xuLy8gICAgICAgICBiYWNrZ3JvdW5kOiBncmVlbjtcbi8vICAgICB9KTtcbi8vIH07XG4vL1xuLy8gLy8gMiBlbGVtZW50cyBvciBmZXdlclxuLy8gLmZvbyB7XG4vLyAgICAgLnF1YW50aXR5LWF0LW1vc3QoMiwgflwiLmZvb1wiLCB7XG4vLyAgICAgICAgIGJhY2tncm91bmQ6IHllbGxvdztcbi8vICAgICB9KTtcbi8vIH07XG4vL1xuLy8gLy8gZXhhY3RseSA3IGVsZW1lbnRzXG4vLyAuZm9vIHtcbi8vICAgICAucXVhbnRpdHktZXhhY3RseSg3LCB+XCIuZm9vXCIsIHtcbi8vICAgICAgICAgYmFja2dyb3VuZDogb3JhbmdlO1xuLy8gICAgIH0pO1xuLy8gfTtcbi8vXG4vLyAvLyBiZXR3ZWVuIDQgYW5kIDUgZWxlbWVudHNcbi8vIC5mb28ge1xuLy8gICAgIC5xdWFudGl0eS1iZXR3ZWVuKDQsIDUsIH5cIi5mb29cIiwge1xuLy8gICAgICAgICBiYWNrZ3JvdW5kOiByZWQ7XG4vLyAgICAgfSk7XG4vLyB9O1xuXG5cbi8vIFNjcm9sbGluZyBzaGFkb3dzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEluc3BpcmVkIGJ5IGh0dHA6Ly9sZWEudmVyb3UubWUvMjAxMi8wNC9iYWNrZ3JvdW5kLWF0dGFjaG1lbnQtbG9jYWwvXG4vLyBDZi4gaHR0cDovL2NvZGVwZW4uaW8va2Jhdi9wZW4vUXlWalJ6L1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBBIHByZXR0eSBicmlsbGlhbnQgYWx0ZXJuYXRpdmUgc29sdXRpb246IGh0dHBzOi8venphcmNvbi5naXRodWIuaW8vcmVhY3Qtc2Nyb2xsLXNoYWRvdy9cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBWYXJpYWJsZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuQHNjcm9sbGluZy1zaGFkb3ctaW5kaWNhdGlvbi1zaGFkb3c6IGZhZGUoIzAwMCwgMjAlKTtcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBUaGUgTWl4aW5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLnNjcm9sbGluZy1zaGFkb3ctaW5kaWNhdGlvbihAYmdjb2xvcjojRkZGLCBAc2hhZG93OiBAc2Nyb2xsaW5nLXNoYWRvdy1pbmRpY2F0aW9uLXNoYWRvdywgQGNvdmVyLXNpemU6IDQwcHgsIEBzaGFkb3ctc2l6ZTogMTJweCkge1xuXG5cdEBiZ2NvbG9yLWZhZGU6IGZhZGUoQGJnY29sb3IsIDAlKTtcblxuXHQvLyBGaXJzdCB0d28gZ3JhZGllbnRzIGFyZSB0aGUgc2hhZG93IGNvdmVyczsgc2Vjb25kIHR3byBhcmUgdGhlIHNoYWRvd3MgdGhlbXNlbHZlc1xuXHRiYWNrZ3JvdW5kOlxuXHRcdGxpbmVhci1ncmFkaWVudChAYmdjb2xvciAzMCUsIEBiZ2NvbG9yLWZhZGUpIDAgMH5cIi9cIjEwMCUgQGNvdmVyLXNpemUgbm8tcmVwZWF0IGxvY2FsLFxuXHRcdGxpbmVhci1ncmFkaWVudChAYmdjb2xvci1mYWRlLCBAYmdjb2xvciA3MCUpIDAgMTAwJX5cIi9cIjEwMCUgQGNvdmVyLXNpemUgbm8tcmVwZWF0IGxvY2FsLFxuXHRcdGxpbmVhci1ncmFkaWVudChAc2hhZG93LCByZ2JhKDAsMCwwLDApKSAwIDB+XCIvXCIxMDAlIEBzaGFkb3ctc2l6ZSBuby1yZXBlYXQgc2Nyb2xsLFxuXHRcdGxpbmVhci1ncmFkaWVudChyZ2JhKDAsMCwwLDApLCBAc2hhZG93KSAwIDEwMCV+XCIvXCIxMDAlIEBzaGFkb3ctc2l6ZSBuby1yZXBlYXQgc2Nyb2xsO1xufVxuXG4vLyBTYW1wbGUgVXNhZ2Vcbi8vIC5zY3JvbGxpbmctc2hhZG93cyB7XG4vLyBcdC5zY3JvbGxpbmctc2hhZG93LWluZGljYXRpb24oQHRpbGUtZ3JheSwgcmdiYSgwLDAsMCwwLjI1KSwgMzZweCwgMTRweCk7XG4vLyB9XG5cblxuLy8gU2VxdWVudGlhbCBBbmltYXRpb24gRGVsYXlcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuQGJ1aWxkLWhhcy1taXhpbi1zZXF1ZW50aWFsLWFuaW1hdGlvbi1kZWxheTogdHJ1ZTsgLy8gRmVlZGJhY2sgZm9yIG1peGluIGd1YXJkIHN1cHBvcnRcblxuLnNlcXVlbnRpYWwtYW5pbWF0aW9uLWRlbGF5KEBpdGVtczogODsgQGJhc2UtZGVsYXk6IDAuMnM7IEBkZWxheS1kZWx0YTogMC4wNzVzOyBAY291bnRlcjogMCkgd2hlbiAoQGNvdW50ZXIgPCBAaXRlbXMpIHtcblxuXHQvLyBjcmVhdGUgKGp1c3Qgb25jZSB0aGFua3MgdG8gXCImIHdoZW5cIiBjb25kaXRpb24pIGFuIGFuaW1hdGlvbiBkZWxheSB0byBjb3ZlciBcImFsbCBmb2xsb3dpbmcgaXRlbXNcIlxuXHQvLyB0aGlzIGlzIGEgZmFsbGJhY2sgaW4gY2FzZSBtb3JlIGl0ZW1zIGFyZSBhZGRlZCBpbiB0aGUgbWFya3VwIGJ1dCB0aGlzIGZ1bmN0aW9uJ3MgYXJndW1lbnRzIGFyZW4ndCB1cGRhdGVkXG5cdCYgd2hlbiAoQGNvdW50ZXIgPSAoQGl0ZW1zIC0gMSkpIHtcblx0XHQmOm50aC1jaGlsZChuKSB7XG5cdFx0XHRhbmltYXRpb24tZGVsYXk6IChAYmFzZS1kZWxheSArIEBkZWxheS1kZWx0YSAqIEBpdGVtcyk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gaXRlcmF0ZVxuXHQuc2VxdWVudGlhbC1hbmltYXRpb24tZGVsYXkoQGl0ZW1zOyBAYmFzZS1kZWxheTsgQGRlbGF5LWRlbHRhOyAoQGNvdW50ZXIgKyAxKSk7XG5cblx0Ly8gcHJpbnRlZCBjb2RlIGZvciBlYWNoIGl0ZXJhdGlvblxuXHRAbnRoOiBAY291bnRlciArIDE7IC8vIENTUyBudGgtY2hpbGQgaXMgbm90IDAgYmFzZWRcblx0JjpudGgtY2hpbGQoQHtudGh9KSB7XG5cdFx0YW5pbWF0aW9uLWRlbGF5OiAoQGJhc2UtZGVsYXkgKyBAZGVsYXktZGVsdGEgKiBAY291bnRlcik7XG5cdH1cbn1cblxuLy8gU2FtcGxlIFVzYWdlXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gLml0ZW0tbGlzdGluZ19fbGkge1xuLy8gXHRAYmFzZS1kZWxheTogM3M7XG4vLyBcdEBpdGVtczogMTY7XG4vLyBcdEBkZWxheS1kZWx0YTogMC4wNXM7XG5cbi8vIFx0Ly8gQmFzZSBhbmltYXRpb25cbi8vIFx0YW5pbWF0aW9uOiBmYWRlSW5VcCAuM3MgZWFzZSBAYmFzZS1kZWxheSAxIG5vcm1hbCBib3RoO1xuLy8gXHQvLyBNaXhpbiBmb3Igc2VxdWVudGlhbCBhbmltYXRpb24gZGVsYXlcbi8vIFx0LnNlcXVlbnRpYWwtYW5pbWF0aW9uLWRlbGF5IChAaXRlbXM7IEBiYXNlLWRlbGF5OyBAZGVsYXktZGVsdGEpO1xuLy8gfVxuXG5cblxuLy8gU2hvdyBGaXJzdCBOdW1iZXIgb2YgSXRlbXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLnNob3ctZmlyc3Qtbi1pdGVtcyhAaXRlbXM7IEBkaXNwbGF5LXByb3BlcnR5OiBibG9jazspIHtcblx0Ly8gaGlkZSBhbGwgYnkgZGVmYXVsdFxuXHRkaXNwbGF5OiBub25lO1xuXG5cdC8vIHNlbGVjdHMgb25seSB0aGUgZmlyc3QgbiBpdGVtcyB0byBkaXNwbGF5IHRoZW1cblx0JjpudGgtY2hpbGQoLW4gKyBAe2l0ZW1zfSkge1xuXHRcdGRpc3BsYXk6IEBkaXNwbGF5LXByb3BlcnR5O1xuXHR9XG59XG5cbi8vIFNhbXBsZSBVc2FnZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gLmZvbyB7XG5cdC8vIERlZmluZSB0aGUgZGVmYXVsdC9tb2JpbGUtZmlyc3Qgc3R5bGVzLlxuXHQvLyBJbiB0aGlzIGNhc2UsIHNhaWQgZGVmYXVsdCBpcyB0byBzaG93IGp1c3QgdGhlIGZpcnN0IGl0ZW0uXG5cdC8vIGRpc3BsYXk6IG5vbmU7XG5cdC8vICY6Zmlyc3QtY2hpbGQgeyBkaXNwbGF5OiBibG9jazsgfVxuXG5cdC8vIFNob3cgaW5jcmVhc2luZyBhbW91bmRzIG9mIGl0ZW1zIGFzIHRoZSB2aWV3cG9ydCBnZXRzIHdpZGVyXG5cdC8vIEBtZWRpYSAobWluLXdpZHRoOiAzNzVweCkgeyAuc2hvdy1maXJzdC1uLWl0ZW1zKDI7IGJsb2NrKTsgfVxuXHQvLyBAbWVkaWEgKG1pbi13aWR0aDogNTAwcHgpIHsgLnNob3ctZmlyc3Qtbi1pdGVtcygzOyBibG9jayk7IH1cblx0Ly8gQG1lZGlhIChtaW4td2lkdGg6IDc1MHB4KSB7IC5zaG93LWZpcnN0LW4taXRlbXMoNDsgYmxvY2spOyB9XG4vLyB9XG5cblxuXG4vLyBIaWRlIFRyYWlsaW5nIEl0ZW1zXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIPCfkoDwn5KA8J+SgPCfkoAgUkVNT1ZFRCDwn5KA8J+SgPCfkoDwn5KAXG4vLyBSZW1vdmVkIGJlY2F1c2U6XG4vLyAgLSBcbi8vID4gPiA+ID4gPiA+ID4gPiA+ID4gPiA+ID4gPiA+ID4gPiA+ID4gPiA+ID4gPiA+IFxuLy8gIC0gUmVhc29uIGZvcjogdGhlIFwicmVtb3ZlIHRyYWlsaW5nIGl0ZW1zXCIgY29uY2VwdCBmYWxscyBhcGFydCBpZiBpdCdzIGJlaW5nIGFwcGxpZWQgdG8gYSBsaXN0IHRoYXQgX21heSBvciBtYXkgbm90XyBoYXZlIHRoZSBpbnRlbmRlZCBudW1iZXIgb2YgaXRlbXMuIGUuZy4sIGEgcHJvZHVjdCBsaXN0IGluIHRoZSBkZXNpZ24gbWlnaHQgaGF2ZSA4IGl0ZW1zIGluIGl0LCBidXQgb24gdGhlIHByb2R1Y3Rpb24gc2l0ZSB0aGVyZSBtYXkgb25seSBiZSA1IGl0ZW1zIHRvIGxpc3QuIEF0IHRoaXMgcG9pbnQsIHRoZSB0cmFpbGluZyBpdGVtcyB3b3VsZCBiZSBoaWRkZW4uIE5vdCBjb29sLiBWZXJ5IGRpZmZpY3VsdCB0byBkZWJ1Zy4gXG4vLyAgLSBJbnN0ZWFkIG9mIHRoaXMgbWl4aW4sIHRoZSAuc2hvdy1maXJzdC1uLWl0ZW1zKCkgbWl4aW4gYWJvdmUgZml4ZXMgdGhpcyBpc3N1ZS5cbi8vID4gPiA+ID4gPiA+ID4gPiA+ID4gPiA+ID4gPiA+ID4gPiA+ID4gPiA+ID4gPiA+IFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAuaGlkZS10cmFpbGluZy1pdGVtcyhAaXRlbXM7IEBkaXNwbGF5LXByb3BlcnR5OiBibG9jazsgQGNvdW50ZXI6IDApIHdoZW4gKEBjb3VudGVyIDw9IEBpdGVtcykge1xuXG4vLyBcdC8vIHByaW50IG9uY2UgYXQgdGhlIHRvcCwgdG8gcmVzZXQgYWxsIGl0ZW1zIHRvIGRpc3BsYXlpbmdcbi8vIFx0JiB3aGVuIChAY291bnRlciA9IChAaXRlbXMgLSAxKSksIChAaXRlbXMgPSAwKSB7XG4vLyBcdFx0JjpudGgtY2hpbGQobikge1xuLy8gXHRcdFx0ZGlzcGxheTogQGRpc3BsYXktcHJvcGVydHk7XG4vLyBcdFx0fVxuLy8gXHR9XG5cbi8vIFx0Ly8gaXRlcmF0aW9uXG4vLyBcdC5oaWRlLXRyYWlsaW5nLWl0ZW1zKEBpdGVtczsgQGRpc3BsYXktcHJvcGVydHk7IChAY291bnRlciArIDEpKTtcblxuLy8gXHQvLyBpdGVyYXRlIHRocm91Z2ggdGhlIHNwZWNpZmllZCBudW1iZXIgb2YgdHJhaWxpbmcgaXRlbXNcbi8vIFx0JjpudGgtbGFzdC1jaGlsZChAe2NvdW50ZXJ9KSB7XG4vLyBcdFx0ZGlzcGxheTogbm9uZTtcbi8vIFx0fVxuLy8gfVxuXG4vLyAvLyBTYW1wbGUgVXNhZ2Vcbi8vIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIC8vIEhpZGUgdGhlIGxhc3QgMyBpdGVtc1xuLy8gLy8gLmhpZGUtdHJhaWxpbmctaXRlbXMoMyk7XG5cbi8vIC8vIEhpZGUgdGhlIGxhc3QgMyBpdGVtcyBhdCBkZWZhdWx0IHNpemUsIDIgaXRlbXMgYXQgLW1kLSwgYW5kIDAgaXRlbXMgYXQgLWxnLVxuLy8gLy8gLml0ZW0ge1xuLy8gLy8gXHQuaGlkZS10cmFpbGluZy1pdGVtcygzKTtcblxuLy8gLy8gXHRAbWVkaWEgKG1pbi13aWR0aDogQHNjcmVlbi1tZC1taW4pIHtcbi8vIC8vIFx0XHQuaGlkZS10cmFpbGluZy1pdGVtcygyKTtcbi8vIC8vIFx0fVxuLy8gLy8gXHRAbWVkaWEgKG1pbi13aWR0aDogQHNjcmVlbi1sZy1taW4pIHtcbi8vIC8vIFx0XHQuaGlkZS10cmFpbGluZy1pdGVtcygwKTtcbi8vIC8vIFx0fVxuLy8gLy8gfVxuXG4vLyAvLyBSZXRhaW4gYSBwcm9wZXJ0eSdzIGRlZmF1bHQgXCJkaXNwbGF5XCIgdmFsdWUgKGVnLiBpbmxpbmUsIGlubGluZS1ibG9jaywgZmxleCwgbGlzdC1pdGVtKVxuLy8gLy8gLmhpZGUtdHJhaWxpbmctaXRlbXMoMzsgbGlzdC1pdGVtKTtcbi8vIDwgPCA8IDwgPCA8IDwgPCA8IDwgPCA8IDwgPCA8IDwgPCA8IDwgPCA8IDwgPCA8IFxuLy8gZW5kIHJlbW92ZWQgY29kZSDwn5KA8J+SgPCfkoDwn5KAXG5cblxuXG5cbi8vIEJldHdpeHRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBBIGR5bmFtaWMgdmFsdWUgY2FsYygpIGdlbmVyYXRvciBmb3IgQ1NTIExvY2tzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gKioqIEFjY2VwdHMgcGl4ZWwgdW5pdHMgYnkgZGVmYXVsdC4qKipcbi8vIFRvIHVzZSAocillbSB1bml0cywgKHIpZW0gdW5pdHMgX211c3RfIGJlIHBhc3NlZFxuLy8gaW4gYXMgYXJndW1lbnRzIGZvciBAZnJvbVdpZHRoIGFuZCBAdG9XaWR0aC5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyB2aWEgaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9iZXR3ZWVuLXRoZS1saW5lcy9cbi8vIG1peGluIGNvZGUgbWFudWFsbHkgdHJhbnNsYXRlZCBmcm9tIFNBU1M6XG4vLyBcdFx0aHR0cDovL2NvZGVwZW4uaW8vdG9ieXN0b2tlcy9wZW4vTmpHT2RlXG4vLyBcdFx0Li4ucGx1cyBzb21lIG1vZGlmaWNhdGlvbnMgb3ZlciB0aW1lLiA6KVxuLy8gRm9yIGZ1cnRoZXIgcmVhZGluZywgY29uc3VsdCB0aGlzIHRob3JvdWdoIHBvc3Q6XG4vLyBcdFx0aHR0cHM6Ly9mdnNjaC5jb20vY29kZS9jc3MtbG9ja3MvXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLmJldHdpeHQoQHByb3BlcnR5LCBAZnJvbSwgQHRvLCBAZnJvbVdpZHRoOiBAc2NyZWVuLXhzLW1pbiwgQHRvV2lkdGg6IEBzY3JlZW4teGwtbWluKSB7XG5cblx0Ly8gRGV0ZXJtaW5lIHNsb3BlIGFuZCB0aGUgeS1pbnRlcmNlcHQgdmFsdWVzXG5cdEBzbG9wZTogKEBmcm9tIC0gQHRvKSAvIChAZnJvbVdpZHRoIC0gQHRvV2lkdGgpO1xuXHRAYmFzZTogQHRvIC0gQHNsb3BlICogQHRvV2lkdGg7XG5cblx0Ly8gU3RhcnRpbmcgd2l0aCB0aGlzIHdpZHRoLCBhIGNhbGMoKSBmdW5jdGlvbiBzY2FsZXMgdGhlIHZhbHVlIHVwIG9yIGRvd24gdG93YXJkIHRoZSBcInRvXCIgdmFsdWVcblx0QG1lZGlhIChtaW4td2lkdGg6IEBmcm9tV2lkdGgpIHtcblx0XHRAe3Byb3BlcnR5fTogY2FsYyh+XCJAe2Jhc2V9ICsgXCIxMDB2dyAqIEBzbG9wZSk7XG5cdH1cblxuXHQvLyBVcHBlciBlbmQgZW5kIG9mIHRoZSBcImxvY2tcIlxuXHRAbWVkaWEgKG1pbi13aWR0aDogQHRvV2lkdGgpIHtcblx0XHRAe3Byb3BlcnR5fTogQHRvO1xuXHR9XG59XG5cbi8vIFNhbXBsZSBVc2FnZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gLy8gQmFzaWMgKHdpdGggcGl4ZWxzKVxuLy8gaDEge1xuLy8gXHQuYmV0d2l4dChmb250LXNpemUsIDI0cHgsIDMycHgpO1xuLy8gfVxuXG4vLyAvLyBCYXNpYyAod2l0aCBlbXMg4oCUIE5PVEU6IGVtIHZhbHVlcyBtdXN0IHRoZW4gYmUgdXNlZCBmb3IgdGhlIG1lZGlhIHF1ZXJ5IHZhbHVlcyEhKVxuLy8gaDEge1xuLy8gXHQuYmV0d2l4dChmb250LXNpemUsIDJlbSwgNWVtLCAyMGVtLCA2My43NWVtKTtcbi8vIH1cblxuLy8gLy8gUGFzcyBpbiB2YXJpYWJsZXMgYXMgYXJndW1lbnRzXG4vLyBoMSB7XG4vLyBcdC5iZXR3aXh0KGZvbnQtc2l6ZSwgQGZvbnQtc2l6ZS1iYXNlLCAzMnB4KTtcbi8vIH1cblxuLy8gLy8gQ2FuIGJlIHVzZWQgZm9yIGFueSBwcm9wZXJ0eSB0aGF0IGlzIGxvb2tpbmcgZm9yIGEgcHggdmFsdWVcbi8vIC5sb2dvIHtcbi8vIFx0LmJldHdpeHQod2lkdGgsIDEwMHB4LCAzNTBweCk7XG4vLyBcdC5iZXR3aXh0KHBhZGRpbmctdG9wLCAxMHB4LCAyMHB4KTtcbi8vIH1cblxuLy8gLy8gQ3VzdG9tIG1lZGlhIHF1ZXJpZXMgY2FuIGJlIHVzZWRcbi8vIC5sb2dvIHtcbi8vIFx0LmJldHdpeHQod2lkdGgsIDIwMHB4LCAzMDBweCwgQHNjcmVlbi1tZC1taW4sIEBzaXRlLW1heC13aWR0aCk7XG4vLyB9XG5cbi8vIC8vIFNldCBhIG1vYmlsZS1maXJzdCwgZGVmYXVsdCB2YWx1ZS4gVGhlbiBhdCBzb21lIGxhcmdlciB2aWV3cG9pbnQgYmV0d2l4dCB3aXRoIGN1c3RvbSBtZWRpYSBxdWVyaWVzXG4vLyBoMSB7XG4vLyBcdGZvbnQtc2l6ZTogMjBweDtcbi8vIFx0LmJldHdpeHQoZm9udC1zaXplLCAyNHB4LCAzMnB4LCBAc2NyZWVuLW1kLW1pbiwgQGRlc2t0b3Atc3R5bGVzLW1pbik7XG4vLyB9XG5cblxuLy8gVGVzdHM6XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8g4pyFIDEuIEJhc2ljczpcbi8vIFx0XHRhLiBiZXR3ZWVuaW5nIHdpdGhvdXQgTVEgdmFsdWVzIGRlY2xhcmVkIGluIHRoZSBtaXhpbiBhbmQgd2l0aFxuLy9cdFx0Yi4gYmV0d2VlbmluZyBmcm9tIGhpZ2ggdG8gbG93IHZhbHVlc1xuLy9cdFx0Yy4gbXVsdGlwbGUgYmV0d2l4dCdzXG5cbi8vIOKchSAyLiBTdXBwb3J0ZWQgcHJvcGVydGllczpcbi8vXHRcdGEuIHdpZHRoLCBoZWlnaHQsIHBhZGRpbmcsIG1hcmdpbiwgYm9yZGVyLXdpZHRoLCBiYWNrZ3JvdW5kLXNpemVcblxuLy8g4pyFL+KdjCAzLiBTdXBwb3J0ZWQgdW5pdHMgb3V0c2lkZSBvZiBweCAocGl4ZWwpIHVuaXRzOlxuLy8gXHRcdGEuIFRvIHVzZSAocillbSB1bml0cywgKiphbGwgYXJndW1lbnRzIHBhc3NlZCBpbiBtdXN0IGJlIGluIChyKWVtIHVuaXRzKiouXG4vLyBcdFx0Yi4gdW5pdGxlc3Mgb3Igbm9uLXBpeGVsLWJhc2VkIHVuaXRzIChlZyBkZWcvcmFkL3R1cm4pIGRvbid0IHdvcmssXG4vL1x0XHRcdHVzdWFsbHkgZHVlIHRvIGNhbGMoKSByZXN0cmljdGlvbnNcblxuLy8g4p2TIDQuIEV4cGVyaW1lbnRzIC8gcmVtYWluaW5nOlxuLy9cdFx0YS4gTWlnaHQgYmUgYSBnb29kIGNhbmRpZGF0ZSBmb3IgY29tYmluaW5nIHdpdGggQ1NTIEN1c3RvbSBQcm9wZXJ0aWVzIC8gKENTUyBWYXJpYWJsZXMpXG4vLyBcdFx0XHQxLiBQYXJ0aWN1bGFybHkgZm9yIGJldHdlZW5pbmcgdmFsdWVzIGxpa2U6IGBib3gtc2hhZG93OiAwIDAgLS1iZXR3aXh0TWVTaGFkb3dTcHJlYWQgIzAwMGBcbi8vXHRcdGIuIENvdWxkIGJlIGZ1biB0byBleHBlcmltZW50IHdpdGggcGVyc3BlY3RpdmUtb3JpZ2luLi4uXG5cblxuLy8gQmFja2dyb3VuZCBjb2xvciBzcGluIGxvb3AgbWl4aW5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gV2hlbiB5b3Ugd2FudCB0aGUgYmFja2dyb3VuZCBjb2xvcnMgb2YgYSBzZXQgdG8gY2hhbmdlIGZyb20gaXRlbSB0byBpdGVtXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi5iYWNrZ3JvdW5kLWNvbG9yLXNwaW4tbG9vcChAYmFzZS1jb2xvcjsgQGl0ZW1zOyBAc3Bpbi1kZWx0YTogNWRlZzsgQGNvdW50ZXI6IChAaXRlbXMgLSAxKSkgd2hlbiAoQGNvdW50ZXIgPiAwKSB7XG5cblx0Ly8gcHJpbnQgKGp1c3Qgb25jZSB0aGFua3MgdG8gXCImIHdoZW5cIiBjb25kaXRpb24pIHRoZSBiYXNlIGNvbG9yXG5cdC8vIHRoaXMgaXMgYSBmYWxsYmFjayBpbiBjYXNlIG1vcmUgaXRlbXMgYXJlIGFkZGVkIGluIHRoZSBtYXJrdXAgYnV0IHRoaXMgZnVuY3Rpb24ncyBhcmd1bWVudHMgYXJlbid0IHVwZGF0ZWRcblx0JiB3aGVuIChAY291bnRlciA9IChAaXRlbXMgLSAxKSkge1xuXHRcdGJhY2tncm91bmQtY29sb3I6IEBiYXNlLWNvbG9yO1xuXHR9XG5cblx0Ly8gaXRlcmF0ZVxuXHQuYmFja2dyb3VuZC1jb2xvci1zcGluLWxvb3AoQGJhc2UtY29sb3I7IEBpdGVtczsgQHNwaW4tZGVsdGE7IChAY291bnRlciAtIDEpKTtcblxuXHQvLyBwcmludGVkIGNvZGUgZm9yIGVhY2ggaXRlcmF0aW9uXG5cdEBudGg6IEBjb3VudGVyICsgMTsgLy8gQ1NTIG50aC1jaGlsZCBpcyBub3QgMCBiYXNlZFxuXHQmOm50aC1jaGlsZChAe250aH0pIHtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiBzcGluKEBiYXNlLWNvbG9yLCAoQGNvdW50ZXIgKiBAc3Bpbi1kZWx0YSkpO1xuXHR9XG59XG5cblxuLy8gKHRleHQpIGNvbG9yIHNwaW4gbG9vcCBtaXhpblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBXaGVuIHlvdSB3YW50IHRoZSB0ZXh0IGNvbG9ycyBvZiBhIHNldCB0byBjaGFuZ2UgZnJvbSBpdGVtIHRvIGl0ZW1cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLmNvbG9yLXNwaW4tbG9vcChAYmFzZS1jb2xvcjsgQGl0ZW1zOyBAc3Bpbi1kZWx0YTogNWRlZzsgQGNvdW50ZXI6IChAaXRlbXMgLSAxKSkgd2hlbiAoQGNvdW50ZXIgPiAwKSB7XG5cblx0Ly8gcHJpbnQgKGp1c3Qgb25jZSB0aGFua3MgdG8gXCImIHdoZW5cIiBjb25kaXRpb24pIHRoZSBiYXNlIGNvbG9yXG5cdC8vIHRoaXMgaXMgYSBmYWxsYmFjayBpbiBjYXNlIG1vcmUgaXRlbXMgYXJlIGFkZGVkIGluIHRoZSBtYXJrdXAgYnV0IHRoaXMgZnVuY3Rpb24ncyBhcmd1bWVudHMgYXJlbid0IHVwZGF0ZWRcblx0JiB3aGVuIChAY291bnRlciA9IChAaXRlbXMgLSAxKSkge1xuXHRcdGNvbG9yOiBAYmFzZS1jb2xvcjtcblx0fVxuXG5cdC8vIGl0ZXJhdGVcblx0LmNvbG9yLXNwaW4tbG9vcChAYmFzZS1jb2xvcjsgQGl0ZW1zOyBAc3Bpbi1kZWx0YTsgKEBjb3VudGVyIC0gMSkpO1xuXG5cdC8vIHByaW50ZWQgY29kZSBmb3IgZWFjaCBpdGVyYXRpb25cblx0QG50aDogQGNvdW50ZXIgKyAxOyAvLyBDU1MgbnRoLWNoaWxkIGlzIG5vdCAwIGJhc2VkXG5cdCY6bnRoLWNoaWxkKEB7bnRofSkge1xuXHRcdGNvbG9yOiBzcGluKEBiYXNlLWNvbG9yLCAoQGNvdW50ZXIgKiBAc3Bpbi1kZWx0YSkpO1xuXHR9XG59XG5cblxuXG4vLyAzLiBNdWx0aS12ZW5kb3ItcHJlZml4IG1peGluc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4uYm94LXNpemluZyhAYnNpemluZzogYm9yZGVyLWJveCkge1xuXHQtd2Via2l0LWJveC1zaXppbmc6IEBic2l6aW5nO1xuXHQgICAtbW96LWJveC1zaXppbmc6IEBic2l6aW5nO1xuXHQgICAgICAgIGJveC1zaXppbmc6IEBic2l6aW5nO1xufVxuXG4uZmlsdGVyKEBmaWx0ZXIpIHtcblx0LXdlYmtpdC1maWx0ZXI6IEBmaWx0ZXI7XG5cdCAgICAgICAgZmlsdGVyOiBAZmlsdGVyO1xufVxuXG4uYmFja2Ryb3AtZmlsdGVyKEBiYWNrZHJvcC1maWx0ZXIpIHtcblx0LXdlYmtpdC1iYWNrZHJvcC1maWx0ZXI6IEBiYWNrZHJvcC1maWx0ZXI7XG5cdCAgICAgICAgYmFja2Ryb3AtZmlsdGVyOiBAYmFja2Ryb3AtZmlsdGVyO1xufVxuXG4uYmFja2dyb3VuZC1jbGlwKEBiZ2NsaXA6IHBhZGRpbmctYm94KSB7XG5cdC13ZWJraXQtYmFja2dyb3VuZC1jbGlwOiBAYmdjbGlwO1xuXHQgICAgICAgIGJhY2tncm91bmQtY2xpcDogQGJnY2xpcDtcbn1cblxuLnRyYW5zaXRpb24oQHRyYW5zaXRpb246IGFsbCAxMjBtcyBlYXNlLW91dCkge1xuXHQtd2Via2l0LXRyYW5zaXRpb246IEB0cmFuc2l0aW9uO1xuXHQgICAgICAgIHRyYW5zaXRpb246IEB0cmFuc2l0aW9uO1xufVxuLnRyYW5zaXRpb24tZGVsYXkoQGRlbGF5KSB7XG5cdC13ZWJraXQtdHJhbnNpdGlvbi1kZWxheTogQGRlbGF5O1xuXHQgICAgICAgIHRyYW5zaXRpb24tZGVsYXk6IEBkZWxheTtcbn1cblxuLnRyYW5zZm9ybShAdHJhbnNmb3JtdmFsKSB7XG5cdC13ZWJraXQtdHJhbnNmb3JtOiBAdHJhbnNmb3JtdmFsO1xuXHQgICAgICAgIHRyYW5zZm9ybTogQHRyYW5zZm9ybXZhbDtcbn1cbi50cmFuc2Zvcm0tb3JpZ2luKEB0cmFuc2Zvcm12YWwpIHtcblx0LXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiBAdHJhbnNmb3JtdmFsO1xuXHQgICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IEB0cmFuc2Zvcm12YWw7XG59XG5cbi5wZXJzcGVjdGl2ZS1vcmlnaW4oQHBlcnNwZWN0aXZldmFsKSB7XG5cdC13ZWJraXQtcGVyc3BlY3RpdmUtb3JpZ2luOiBAcGVyc3BlY3RpdmV2YWw7XG5cdCAgICAtbXMtcGVyc3BlY3RpdmUtb3JpZ2luOiBAcGVyc3BlY3RpdmV2YWw7XG5cdCAgICAgICAgcGVyc3BlY3RpdmUtb3JpZ2luOiBAcGVyc3BlY3RpdmV2YWw7XG59XG5cbi8vIEZsZXhib3hcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEZsZXggcGFyZW50IHByb3BlcnRpZXMgX19fX19fX19fXG4uZGlzcGxheS1mbGV4KCkge1xuXHRkaXNwbGF5OiAtbXMtZmxleGJveDtcblx0ZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuXHRkaXNwbGF5OiBmbGV4O1xufVxuLmRpc3BsYXktaW5saW5lLWZsZXgoKSB7XG5cdGRpc3BsYXk6IC1tcy1pbmxpbmUtZmxleGJveDtcblx0ZGlzcGxheTogLXdlYmtpdC1pbmxpbmUtZmxleDtcblx0ZGlzcGxheTogaW5saW5lLWZsZXg7XG59XG4uZmxleC1kaXJlY3Rpb24oQHRoZS1kaXJlY3Rpb246IHJvdykge1xuXHQgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBAdGhlLWRpcmVjdGlvbjtcblx0LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjogQHRoZS1kaXJlY3Rpb247XG5cdCAgICAgICAgZmxleC1kaXJlY3Rpb246IEB0aGUtZGlyZWN0aW9uO1xufVxuLmZsZXgtd3JhcChAdGhlLXdyYXA6IHdyYXApIHtcblx0ICAgIC1tcy1mbGV4LXdyYXA6IEB0aGUtd3JhcDtcblx0LXdlYmtpdC1mbGV4LXdyYXA6IEB0aGUtd3JhcDtcblx0ICAgICAgICBmbGV4LXdyYXA6IEB0aGUtd3JhcDtcbn1cbi5mbGV4LWp1c3RpZnktY29udGVudChAdGhlLWp1c3RpZnk6IGNlbnRlcikge1xuXHQgICAgICAgICAgLW1zLWZsZXgtcGFjazogQHRoZS1qdXN0aWZ5O1xuXHQtd2Via2l0LWp1c3RpZnktY29udGVudDogQHRoZS1qdXN0aWZ5O1xuXHQgICAgICAgIGp1c3RpZnktY29udGVudDogQHRoZS1qdXN0aWZ5O1xufVxuLmZsZXgtYWxpZ24taXRlbXMoQHRoZS1hbGlnbm1lbnQ6IGNlbnRlcikge1xuXHQgICAgIC1tcy1mbGV4LWFsaWduOiBAdGhlLWFsaWdubWVudDtcblx0LXdlYmtpdC1hbGlnbi1pdGVtczogQHRoZS1hbGlnbm1lbnQ7XG5cdCAgICAgICAgYWxpZ24taXRlbXM6IEB0aGUtYWxpZ25tZW50O1xufVxuLmZsZXgtYWxpZ24tY29udGVudChAY29udGVudC1hbGlnbm1lbnQ6IHN0cmV0Y2gpIHtcblx0ICAgLW1zLWZsZXgtbGluZS1wYWNrOiBAY29udGVudC1hbGlnbm1lbnQ7XG5cdC13ZWJraXQtYWxpZ24tY29udGVudDogQGNvbnRlbnQtYWxpZ25tZW50O1xuXHQgICAgICAgIGFsaWduLWNvbnRlbnQ6IEBjb250ZW50LWFsaWdubWVudDtcbn1cblxuLy8gRmxleCBjaGlsZCBwcm9wZXJ0aWVzIF9fX19fX19fX1xuLm9yZGVyKEB0aGUtb3JkZXI6IDEpIHtcblx0LW1zLWZsZXgtb3JkZXI6IEB0aGUtb3JkZXI7XG5cdCAtd2Via2l0LW9yZGVyOiBAdGhlLW9yZGVyO1xuXHQgICAgICAgICBvcmRlcjogQHRoZS1vcmRlcjtcbn1cbi5mbGV4KEB0aGUtZmxleDogMSkge1xuXHQgICAgLW1zLWZsZXg6IEB0aGUtZmxleDtcblx0LXdlYmtpdC1mbGV4OiBAdGhlLWZsZXg7XG5cdCAgICAgICAgZmxleDogQHRoZS1mbGV4O1xufVxuLmZsZXgtZ3JvdyhAdGhlLWdyb3c6IDApIHtcblx0LXdlYmtpdC1mbGV4LWdyb3c6IEB0aGUtZ3Jvdztcblx0ICAgICAgICBmbGV4LWdyb3c6IEB0aGUtZ3Jvdztcbn1cbi5mbGV4LXNocmluayhAdGhlLXNocmluazogMSkge1xuXHQtd2Via2l0LWZsZXgtc2hyaW5rOiBAdGhlLXNocmluaztcblx0ICAgICAgICBmbGV4LXNocmluazogQHRoZS1zaHJpbms7XG59XG4uZmxleC1iYXNpcyhAdGhlLWJhc2lzOiBhdXRvKSB7XG5cdC13ZWJraXQtZmxleC1iYXNpczogQHRoZS1iYXNpcztcblx0ICAgICAgICBmbGV4LWJhc2lzOiBAdGhlLWJhc2lzO1xufVxuLmZsZXgtYWxpZ24tc2VsZihAdGhlLWFsaWdubWVudDogYXV0bykge1xuXHQtbXMtZmxleC1pdGVtLWFsaWduOiBAdGhlLWFsaWdubWVudDtcblx0IC13ZWJraXQtYWxpZ24tc2VsZjogQHRoZS1hbGlnbm1lbnQ7XG5cdCAgICAgICAgIGFsaWduLXNlbGY6IEB0aGUtYWxpZ25tZW50O1xufVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIGVuZCBGbGV4Ym94IG1peGluc1xuXG4udXNlci1zZWxlY3QoQHNlbGVjdC12YWx1ZTogbm9uZSkge1xuXHQtd2Via2l0LXVzZXItc2VsZWN0OiBAc2VsZWN0LXZhbHVlO1xuXHQgICAtbW96LXVzZXItc2VsZWN0OiBAc2VsZWN0LXZhbHVlO1xuXHQgICAgLW1zLXVzZXItc2VsZWN0OiBAc2VsZWN0LXZhbHVlO1xuXHQgICAgICAgIHVzZXItc2VsZWN0OiBAc2VsZWN0LXZhbHVlO1xufVxuIiwiLy9cbi8vIEhlbHBlcnNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBDbGFzc2VzIHVzZWQgZm9yIGFpZGluZyBmcm9udC1lbmQgZGV2ZWxvcG1lbnQgdGhhdFxuLy8gY2FuIGFzc2lzdCBpbiBkZWZpbmluZyBvciByZXN0eWxpbmcgZWxlbWVudHMgdy9vdXRcbi8vIG5lZWRpbmcgdG8gYmUgZnVsbC1ibG93biBvdmVycmlkZXMuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gRm9yICFpbXBvcnRhbnQgdXNpbmcgb3ZlcnJpZGUgY2xhc3Nlcywgc2VlXG4vLyBfdXRpbGl0aWVzLmxlc3MuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cblxuLy8gU2NyZWVucmVhZGVyICsgU2tpcCBMaW5rXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBWYXJpYWJsZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQHNraXAtbGluay1idXR0b24tcG9zaXRpb246ICAgICBmaXhlZCAhaW1wb3J0YW50O1xuLy8gQHNraXAtbGluay1idXR0b24tdG9wOiAgICAgICAgIEBjb21tb24tZ3V0dGVyO1xuLy8gQHNraXAtbGluay1idXR0b24tbGVmdDogICAgICAgQGNvbW1vbi1ndXR0ZXI7XG5Ac2tpcC1saW5rLWJ1dHRvbi16LWluZGV6OiAgICAgICAxMDAxO1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIFN0eWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4uc3Itb25seSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIHBhZGRpbmc6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCwwLDAsMCk7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGJvcmRlcjogMDtcbn1cbi5zci1vbmx5LWZvY3VzYWJsZTpmb2N1cyxcbi5zci1vbmx5LWZvY3VzYWJsZTphY3RpdmUge1xuICBwb3NpdGlvbjogc3RhdGljO1xuICB3aWR0aDogYXV0bztcbiAgaGVpZ2h0OiBhdXRvO1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgY2xpcDogYXV0bztcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbn1cblxuLnNraXAtbGluay1idXR0b24ge1xuICBsZWZ0OiAtOTk5cHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiBhdXRvO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgei1pbmRleDogLTk5OTtcbiAgJjpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBsZWZ0OiBhdXRvO1xuICAgIHRvcDogYXV0bztcbiAgICB3aWR0aDogYXV0bztcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgcGFkZGluZzogMC41ZW0gMWVtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDEuMmVtO1xuICAgIHotaW5kZXg6IDk5OTtcbiAgfVxufVxuXG5cbi8vIENsZWFyZml4aW5nXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gLmNsZWFyX2Zsb2F0KCkgaXMgdGhlIExFU1MgbWl4aW4gKF9taXhpbnMubGVzcyk7XG4vLyAuY2xlYXJmaXggaXMgYSBoZWxwZXIgQ1NTIGNsYXNzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLmNsZWFyZml4IHtcbiAgLmNsZWFyX2Zsb2F0KCk7XG59XG5cblxuXG4vLyBTdHJpcHBlZCBMaXN0c1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIOKYoOKYoOKYoOKYoCBERVBSRUNBVEVEIOKYoOKYoOKYoOKYoFxuLy8gRGVwcmVjYXRlZCBiZWNhdXNlOlxuLy8gIC0gY2xhc3MgbmFtZSBub3QgY29uc2lzdGVudCB3aXRoIFBlcmNoXG4vLyAgLSBzdHJpcHBlZCBpcyBhIGJpdCBjbGVhcmVyXG4ubGlzdC1iYXJlLFxuLy8gZW5kIGRlcHJlY2F0ZWQgY29kZSDimKDimKDimKDimKBcbi5saXN0LS1zdHJpcHBlZCB7XG4gIC5zdHJpcF9saXN0ICgpO1xufVxuXG5cblxuLy8gQ29tbW9uIENvbnRlbnQgVmVydGljYWwgU3BhY2luZ1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEEgcmV1c2FibGUgc2V0IG9mIGhlbHBlcnMgZm9yIGRlZmluaW5nIHZlcnRpY2FsXG4vLyBzcGFjaW5nIHdpdGggcGVyY2VudGFnZXMsIHlldCBjYXBwaW5nIHRob3NlXG4vLyBwZXJjZW50YWdlcyBhdCBzZXQgdmlld3BvcnQgd2lkdGhzLlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gVmFyaWFibGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEBjb250ZW50LXZlcnRpY2FsLXNwYWNpbmctbG9jay12dzogICAgIEBzaXRlLW1heC13aWR0aDtcbi8vIEBjb250ZW50LXZlcnRpY2FsLXNwYWNpbmc6ICAgICAgICAgNSU7XG4vLyBAY29udGVudC12ZXJ0aWNhbC1zcGFjaW5nLWxvY2tlZDogICAgIChAY29udGVudC12ZXJ0aWNhbC1zcGFjaW5nLWxvY2stdncgKiBAY29udGVudC12ZXJ0aWNhbC1zcGFjaW5nIC8gMTAwKTtcbi8vIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIFN0eWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAuY29tbW9uLWNvbnRlbnQtdmVydGljYWwtc3BhY2luZyB7XG4vLyAgIHBhZGRpbmctdG9wOiAgICBAY29udGVudC12ZXJ0aWNhbC1zcGFjaW5nO1xuLy8gICBwYWRkaW5nLWJvdHRvbTogQGNvbnRlbnQtdmVydGljYWwtc3BhY2luZztcblxuLy8gICBAbWVkaWEgKG1pbi13aWR0aDogQGNvbnRlbnQtdmVydGljYWwtc3BhY2luZy1sb2NrLXZ3KSB7XG4vLyAgICAgcGFkZGluZy10b3A6ICAgIEBjb250ZW50LXZlcnRpY2FsLXNwYWNpbmctbG9ja2VkO1xuLy8gICAgIHBhZGRpbmctYm90dG9tOiBAY29udGVudC12ZXJ0aWNhbC1zcGFjaW5nLWxvY2tlZDtcbi8vICAgfVxuLy8gfVxuLy8gLmNvbW1vbi1jb250ZW50LXZlcnRpY2FsLXNwYWNpbmctdG9wIHtcbi8vICAgcGFkZGluZy10b3A6ICAgIEBjb250ZW50LXZlcnRpY2FsLXNwYWNpbmc7XG5cbi8vICAgQG1lZGlhIChtaW4td2lkdGg6IEBjb250ZW50LXZlcnRpY2FsLXNwYWNpbmctbG9jay12dykge1xuLy8gICAgIHBhZGRpbmctdG9wOiAgICBAY29udGVudC12ZXJ0aWNhbC1zcGFjaW5nLWxvY2tlZDtcbi8vICAgfVxuLy8gfVxuLy8gLmNvbW1vbi1jb250ZW50LXZlcnRpY2FsLXNwYWNpbmctYm90dG9tIHtcbi8vICAgcGFkZGluZy1ib3R0b206IEBjb250ZW50LXZlcnRpY2FsLXNwYWNpbmc7XG5cbi8vICAgQG1lZGlhIChtaW4td2lkdGg6IEBjb250ZW50LXZlcnRpY2FsLXNwYWNpbmctbG9jay12dykge1xuLy8gICAgIHBhZGRpbmctYm90dG9tOiBAY29udGVudC12ZXJ0aWNhbC1zcGFjaW5nLWxvY2tlZDtcbi8vICAgfVxuLy8gfVxuXG5cblxuLy8gSW1hZ2VzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLmltZy1mbHVpZCwgLy8gQlM0IGNsYXNzIG5hbWVcbi5pbWctcmVzcG9uc2l2ZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbn1cblxuXG5cbi8vIFNWR3Ncbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4uc3ZnLXdyYXBwZXIge1xuICBkaXNwbGF5OiBibG9jaztcblxuICA+IHN2ZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogYXV0bztcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICB9XG59XG5cblxuXG4vLyBKUyB0b2dnbGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gLmlzLW1vYmlsZS1zY3JvbGwtbG9ja2VkIHtcbi8vICAgb3ZlcmZsb3c6IGhpZGRlbjtcbi8vICAgLy8gcG9zaXRpb246IGZpeGVkOyAvLyAyMDE4LTAxLTAyIHJlbW92ZWQgYmVjYXVzZSB0aGlzIHdhcyBjYXVzaW5nIGFsbCB2ZXJzaW9ucyBvZiBXZWJLaXQgdG8gZmFpbDogdGhlIG1vYmlsZSBuYXZpZ2F0aW9uIHdvdWxkIG5vIGxvbmdlciBzaG93LlxuLy8gICBoZWlnaHQ6IDEwMCU7XG4vLyAgIHdpZHRoOiAxMDAlO1xuXG4vLyAgIC8vIEluIGxhbmRzY2FwZSB2aWV3cyB0aGlzIHNlZW1zIHRvIHpvb20gd2F5IGluIHRvIHRoZSBwYWdlLiBTbyB0aGlzIGZpeGVzIGl0XG4vLyAgIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XG4vLyAgICAgcG9zaXRpb246IHN0YXRpYztcbi8vICAgICBoZWlnaHQ6IGF1dG87XG4vLyAgICAgd2lkdGg6IGF1dG87XG4vLyAgIH1cbi8vICAgQG1lZGlhIChtaW4td2lkdGg6IEBkZXNrdG9wLXN0eWxlcy1taW4pIHtcbi8vICAgICBvdmVyZmxvdzogdmlzaWJsZTtcbi8vICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4vLyAgICAgaGVpZ2h0OiBhdXRvO1xuLy8gICAgIHdpZHRoOiBhdXRvO1xuLy8gICB9XG4vLyB9XG5cblxuXG4vLyBNYWtlIGZ1bGwgd2lkdGhcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBVc2VmdWwgZm9yIGJyZWFraW5nIGVsZW1lbnRzIG91dCBvZiBjb250YWluZXJzXG4vLyBOT1RFOiB0aGlzIGFzc3VtZXMgdGhhdCB0aGUgY29udGFpbmVyIGlzIGNlbnRlcmVkLlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi5tYWtlLWZ1bGwtd2lkdGgge1xuICAvLyBNYWtlIHdpZHRoIGZ1bGwgdmlld3BvcnQgd2lkdGhcbiAgd2lkdGg6IDEwMHZ3O1xuICAvLyBBbGxvdyBmb3IgcmVsYXRpdmUgcG9zaXRpb25pbmdcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAvLyBSZWxhdGl2ZSB0byBpdHMgY29udGFpbmVyIHdpZHRoLCBpdCBpcyBwdXNoZWQgNTAlIHRvIHRoZSBsZWZ0XG4gIGxlZnQ6IDUwJTtcbiAgLy8gUmVsYXRpdmUgdG8gaXRzIG93biB3aWR0aCAoMTAwdncpLCBpdCBpcyBwdWxsZWQgYmFjayA1MCUgdG8gdGhlIGxlZnRcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSk7XG59XG5cblxuXG4vLyBHdXR0ZXIgQnJlYWsgT3V0IGhlbHBlcnNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBEZWZhdWx0cyB0byBAY29tbW9uLWd1dHRlciBidXQgY2FuIGJlIGFkanVzdGVkXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBWYXJpYWJsZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQGd1dHRlci1icmVhay1vdXQtZ3V0dGVyLXdpZHRoOiBAY29tbW9uLWd1dHRlcjtcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIFN0eWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAuZ3V0dGVyLWJyZWFrLW91dC14cyB7XG4vLyAgIEBtZWRpYSAobWF4LXdpZHRoOiBAc2NyZWVuLXhzLW1heCkge1xuLy8gICAgIG1hcmdpbi1sZWZ0OiAgLShAZ3V0dGVyLWJyZWFrLW91dC1ndXR0ZXItd2lkdGgpO1xuLy8gICAgIG1hcmdpbi1yaWdodDogLShAZ3V0dGVyLWJyZWFrLW91dC1ndXR0ZXItd2lkdGgpO1xuLy8gICB9XG4vLyB9XG4vLyAuZ3V0dGVyLWJyZWFrLW91dC1zbSB7XG4vLyAgIEBtZWRpYSAobWluLXdpZHRoOiBAc2NyZWVuLXNtLW1pbikgYW5kIChtYXgtd2lkdGg6IEBzY3JlZW4tc20tbWF4KSB7XG4vLyAgICAgbWFyZ2luLWxlZnQ6ICAtKEBndXR0ZXItYnJlYWstb3V0LWd1dHRlci13aWR0aCk7XG4vLyAgICAgbWFyZ2luLXJpZ2h0OiAtKEBndXR0ZXItYnJlYWstb3V0LWd1dHRlci13aWR0aCk7XG4vLyAgIH1cbi8vIH1cbi8vIC5ndXR0ZXItYnJlYWstb3V0LW1kIHtcbi8vICAgQG1lZGlhIChtaW4td2lkdGg6IEBzY3JlZW4tbWQtbWluKSBhbmQgKG1heC13aWR0aDogQHNjcmVlbi1tZC1tYXgpIHtcbi8vICAgICBtYXJnaW4tbGVmdDogIC0oQGd1dHRlci1icmVhay1vdXQtZ3V0dGVyLXdpZHRoKTtcbi8vICAgICBtYXJnaW4tcmlnaHQ6IC0oQGd1dHRlci1icmVhay1vdXQtZ3V0dGVyLXdpZHRoKTtcbi8vICAgfVxuLy8gfVxuLy8gLmd1dHRlci1icmVhay1vdXQtbGcge1xuLy8gICBAbWVkaWEgKG1pbi13aWR0aDogQHNjcmVlbi1sZy1taW4pIGFuZCAobWF4LXdpZHRoOiBAc2NyZWVuLWxnLW1heCkge1xuLy8gICAgIG1hcmdpbi1sZWZ0OiAgLShAZ3V0dGVyLWJyZWFrLW91dC1ndXR0ZXItd2lkdGgpO1xuLy8gICAgIG1hcmdpbi1yaWdodDogLShAZ3V0dGVyLWJyZWFrLW91dC1ndXR0ZXItd2lkdGgpO1xuLy8gICB9XG4vLyB9XG4vLyAuZ3V0dGVyLWJyZWFrLW91dC14bCB7XG4vLyAgIEBtZWRpYSAobWluLXdpZHRoOiBAc2NyZWVuLXhsLW1pbikgYW5kIChtYXgtd2lkdGg6IEBzY3JlZW4teGwtbWF4KSB7XG4vLyAgICAgbWFyZ2luLWxlZnQ6ICAtKEBndXR0ZXItYnJlYWstb3V0LWd1dHRlci13aWR0aCk7XG4vLyAgICAgbWFyZ2luLXJpZ2h0OiAtKEBndXR0ZXItYnJlYWstb3V0LWd1dHRlci13aWR0aCk7XG4vLyAgIH1cbi8vIH1cbi8vIC5ndXR0ZXItYnJlYWstb3V0LXh4bCB7XG4vLyAgIEBtZWRpYSAobWluLXdpZHRoOiBAc2NyZWVuLXh4bC1taW4pIHtcbi8vICAgICBtYXJnaW4tbGVmdDogIC0oQGd1dHRlci1icmVhay1vdXQtZ3V0dGVyLXdpZHRoKTtcbi8vICAgICBtYXJnaW4tcmlnaHQ6IC0oQGd1dHRlci1icmVhay1vdXQtZ3V0dGVyLXdpZHRoKTtcbi8vICAgfVxuLy8gfSIsIi8vXG4vLyBHbG9iYWxzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gaHRtbCwgYm9keSwgZ2xvYmFsIHdyYXBwZXIsIGludGVyYWN0aW9uIHN0eWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBWYXJpYWJsZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gLS0gbW9zdCBvZiB0aGUgZ2xvYmFsIHZhcmlhYmxlcyBhcmUgc2V0XG4vLyAgICBpbiBfcGVyY2gtZ2xvYmFsLXZhcmlhYmxlcy5sZXNzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBXcmFwcGVyIFN0eWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5odG1sIHtcbiAgbWluLWhlaWdodDogMTAwJTtcblxuICBmb250LWZhbWlseTogQGZvbnQtZmFtaWx5LWJhc2U7XG4gIC8vIGZvbnQtc2l6ZTogQGZvbnQtc2l6ZS1iYXNlLW1vYmlsZTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgY29sb3I6IEBnbG9iYWwtdGV4dC1jb2xvcjtcblxuICBiYWNrZ3JvdW5kLWNvbG9yOiBAaHRtbC1iZy1jb2xvcjtcblxuICAvLyDimKDimKDimKDimKAgREVQUkVDQVRFRCDimKDimKDimKDimKBcbiAgLy8gb3ZlcmZsb3c6IGF1dG87XG5cbiAgLy8gTm90ZTogaWYgdGhpcyBpcyBzZXQsIHRoZW4gdHJpZ2dlcmluZyBvdmVyZmxvdzogaGlkZGVuIG9uIHRoZSA8Ym9keT4gd2lsbCBubyBsb25nZXIgbG9jayB0aGUgPGJvZHk+IGZyb20gc2Nyb2xsaW5nLiBUaGlzIHJlYXJlZCBpdHMgdWdseSBoZWFkIHdoZW4gd29ya2luZyB3aXRoIGEgbW9kYWwgZWxlbWVudC5cblxuICAvLyBOb3Qgc3VyZSB3aGF0IHRoaXMgb3ZlcmZsb3cgc2V0dGluZyB3YXMgYmVpbmcgdXNlZCBmb3Igb3RoZXIgdGhhbiBzb21lIHNjcm9sbGJhciBwcmVmZXJlbmNlcyBtYXliZS4gQnV0IG5vdCBzdXJlIGlmIHJlbW92aW5nIHRoaXMgY291bGQgYmUgc29tZWhvdyBicmVha2luZyBzb21ldGhpbmcuLi4gS0IgMjAxNy0wMi0xNlxuICAvLyBlbmQgZGVwcmVjYXRlZCBjb2RlIOKYoOKYoOKYoOKYoFxuXG4gIC8vIFNjYWxlIHVwIGdsb2JhbCBmb250IHNpemUgYXQgbGFyZ2VyIHdpZHRoc1xuICAvLyBAbWVkaWEgKG1pbi13aWR0aDogQHZpZXdwb3J0LXdpZHRoLWZvbnQtc2l6ZS10YWJsZXQpIHtcbiAgLy8gICBmb250LXNpemU6IEBmb250LXNpemUtYmFzZS10YWJsZXQ7XG4gIC8vIH1cbiAgLy8gQG1lZGlhIChtaW4td2lkdGg6IEB2aWV3cG9ydC13aWR0aC1mb250LXNpemUtZGVza3RvcCkge1xuICAvLyAgIGZvbnQtc2l6ZTogQGZvbnQtc2l6ZS1iYXNlO1xuICAvLyB9XG59XG5cblxuYm9keSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICBtaW4taGVpZ2h0OiAxMDB2aDsgLy8gRm9yY2UgdGhlIGJvZHkgdG8gYmUgYXQgbGVhc3QgYXMgaGlnaCBhcyB0aGUgdmlld3BvcnRcblxuICBiYWNrZ3JvdW5kLWNvbG9yOiBAYm9keS1iZy1jb2xvcjtcblxuICBsaW5lLWhlaWdodDogQGxpbmUtaGVpZ2h0LWJhc2U7XG59XG5cblxuLmdsb2JhbC13cmFwcGVyIHtcbiAgLmNsZWFyX2Zsb2F0ICgpO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuXG5cbi8vIEludGVyYWN0aW9uIFN0eWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIFNlbGVjdGlvbiBzdHlsZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG46Oi1tb3otc2VsZWN0aW9uIHsgY29sb3I6IEBzZWxlY3Rpb24tdGV4dC1jb2xvcjsgYmFja2dyb3VuZDogQHNlbGVjdGlvbi1iZy1jb2xvcjsgdGV4dC1zaGFkb3c6IG5vbmU7IH1cbjo6c2VsZWN0aW9uICAgICB7IGNvbG9yOiBAc2VsZWN0aW9uLXRleHQtY29sb3I7IGJhY2tncm91bmQ6IEBzZWxlY3Rpb24tYmctY29sb3I7IHRleHQtc2hhZG93OiBub25lOyB9XG5cbi8vIFRhcCBIaWdobGlnaHQgQ29sb3Jcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5ib2R5IHstd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IEB0YXAtaGlnaGxpZ2h0LWJnLWNvbG9yOyB9IiwiLy9cbi8vIFNpdGUgR2xvYmFsIFZhcmlhYmxlcyAoT3IgVGhlbWUgU3R5bGVzKVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuQHNpdGUtbWF4LXdpZHRoOiAxMTQwcHg7XG5AZGVza3RvcC1zdHlsZXMtbWluOiA5ODBweDtcbkBjb250ZW50LWNvbnRhaW5lci1wYWRkaW5nOiA1JTtcblxuLy8gRmFtaWxpZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5AZm9udC1mYW1pbHktc2VyaWY6IFx0XHRcIkdlb3JnaWFcIiwgXCJUaW1lcyBOZXcgUm9tYW5cIiwgVGltZXMsIHNlcmlmLCBcIkFwcGxlIENvbG9yIEVtb2ppXCIsIFwiU2Vnb2UgVUkgRW1vamlcIiwgXCJTZWdvZSBVSSBTeW1ib2xcIiwgXCJOb3RvIENvbG9yIEVtb2ppXCI7XG5AZm9udC1mYW1pbHktc2FuczogXHRcdFx0RnJlZXNhbnMsIEhlbG1ldCwgc2Fucy1zZXJpZiwgXCJBcHBsZSBDb2xvciBFbW9qaVwiLCBcIlNlZ29lIFVJIEVtb2ppXCIsIFwiU2Vnb2UgVUkgU3ltYm9sXCIsIFwiTm90byBDb2xvciBFbW9qaVwiO1xuXG5AZm9udC1mYW1pbHktYmFzZTogICAgICAgQGZvbnQtZmFtaWx5LXNhbnM7XG5AZm9udC1mYW1pbHktYWx0ZXJuYXRlOiAgIEBmb250LWZhbWlseS1zZXJpZjtcblxuQGZvbnQtc2l6ZS1iYXNlOiAgICAgICAxOHB4O1xuQGZvbnQtd2VpZ2h0LWJhc2U6ICAgICAgIG5vcm1hbDtcbkBsaW5lLWhlaWdodC1iYXNlOiAgICAgICAxLjU7XG5cbkBjb21tb24tYm9yZGVyLXJhZGl1czogICAgIDdweDsiLCIvL1xuLy8gQnJvd3NlciBNZXNzYWdlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBWYXJpYWJsZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuQGJyb3dzZXItbWVzc2FnZS1tYXgtd2lkdGg6IFx0XHRcdEBzaXRlLW1heC13aWR0aDtcbkBicm93c2VyLW1lc3NhZ2UtcGFkZGluZzogXHRcdFx0XHQzLjUlIDFlbTtcbkBicm93c2VyLW1lc3NhZ2UtbWFyZ2luOiBcdFx0XHRcdGF1dG8gYXV0byBAY29tbW9uLXZlcnRpY2FsLWd1dHRlcjtcbkBicm93c2VyLW1lc3NhZ2UtYmctY29sb3I6IFx0XHRcdFx0I0VFQ0ZDRjtcbkBicm93c2VyLW1lc3NhZ2UtdGV4dC1hbGlnbjogXHRcdFx0Y2VudGVyO1xuQGJyb3dzZXItbWVzc2FnZS1saW5lLWhlaWdodDogXHRcdFx0MS41O1xuQGJyb3dzZXItbWVzc2FnZS1jb2xvcjogXHRcdFx0XHQjQjk0QTQ4O1xuXG4vLyAj4o+zRlVUVVJFLUNTUy1HUklEXG4vLyBAYnJvd3Nlci1vdXRkYXRlZC1tZXNzYWdlLXNlbGVjdG9yOiBcdH5cIi5tb2Qtbm8tY3NzZ3JpZC5tb2Qtbm8tY3NzZ3JpZGxlZ2FjeVwiO1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gU3R5bGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi5icm93c2VyLW1lc3NhZ2Uge1xuXHRkaXNwbGF5OiBub25lO1xuXG5cdG1heC13aWR0aDogQGJyb3dzZXItbWVzc2FnZS1tYXgtd2lkdGg7XG5cdHBhZGRpbmc6IEBicm93c2VyLW1lc3NhZ2UtcGFkZGluZztcblx0bWFyZ2luOiBAYnJvd3Nlci1tZXNzYWdlLW1hcmdpbjtcblxuXHRiYWNrZ3JvdW5kLWNvbG9yOiBAYnJvd3Nlci1tZXNzYWdlLWJnLWNvbG9yOztcblx0dGV4dC1hbGlnbjogQGJyb3dzZXItbWVzc2FnZS10ZXh0LWFsaWduO1xuXHRsaW5lLWhlaWdodDogQGJyb3dzZXItbWVzc2FnZS1saW5lLWhlaWdodDtcblx0Y29sb3I6IEBicm93c2VyLW1lc3NhZ2UtY29sb3I7XG5cblx0Ly8gVW5oaWRpbmcgbG9naWMgZm9yIGRpZmZlcmVudCBicm93c2VyLW1lc3NhZ2UgdHlwZXNcblx0Ly8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0Ji5icm93c2VyLW91dGRhdGVkLW1lc3NhZ2Uge1xuXHRcdC8vIFNob3cgdGhpcyBoaWRkZW4gZWxlbWVudCBpZiB1c2luZyBhbiBvdXRkYXRlZCBicm93c2VyIF9fX19fX19fX1xuXG5cblxuXHRcdC8vIOKPs+KYoO+4j+KPsyBGdXR1cmUgZGVwcmVjYXRpb24sIGJhYnkhIOKPs+KYoO+4j+KPs1xuXHRcdC8vICPij7NGVVRVUkUtQ1NTLUdSSURcblx0XHQvLyBDaHJvbWUgYmVmb3JlIDQ5LCBvbGQgSUUnc1xuXHRcdC8vIGh0dHBzOi8vY2FuaXVzZS5jb20vI2ZlYXQ9cGljdHVyZVxuXHRcdC5tb2Qtbm8tcGljdHVyZSAmIHtcblx0XHRcdGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG5cdFx0fVxuXHRcdC8vIGVuZCBmdXR1cmUgZGVwcmVjYXRpb24gY29kZSDij7PimKDvuI/ij7NcblxuXHRcdC8vIOKPs+KPs+KPsyBGdXR1cmUsIGJhYnkhIOKPs+KPs+KPs1xuXHRcdC8vIFRoZSBmb2xsb3dpbmcgY29kZSB3aWxsIGJlIGVtcGxveWVkIGluIGEgZnV0dXJlIHZlcnNpb24gb2YgUGVyY2g6XG5cdFx0Ly8gIC0gTW92ZSBicm93c2VyIHN1cHBvcnQgdG8gZXhwbGljaXRseSByZXF1aXJlIENTUyBHcmlkXG5cdFx0Ly8gIC0gQWxzbyBzZWUgcmVsZXZhbnQgaXRlbXMgbWFya2VkICPij7NGVVRVUkUtQ1NTLUdSSURcblx0XHQvLyA+ID4gPiA+ID4gPiA+ID4gPiA+ID4gPiA+ID4gPiA+ID4gPiA+ID4gPiA+ID4gPiBcblx0XHQvLyAvLyBJZiBicm93c2VyIGRvZXMgbm90IEFUIEFMTCBzdXBwb3J0IENTUyBHcmlkLCBzaG93IHRoZSB3YXJuaW5nXG5cdFx0Ly8gLy8gaHR0cHM6Ly9jYW5pdXNlLmNvbS8jZmVhdD1jc3MtZ3JpZFxuXHRcdC8vIEB7YnJvd3Nlci1vdXRkYXRlZC1tZXNzYWdlLXNlbGVjdG9yfSAmIHtcblx0XHQvLyBcdGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG5cdFx0Ly8gfVxuXHRcdC8vIDwgPCA8IDwgPCA8IDwgPCA8IDwgPCA8IDwgPCA8IDwgPCA8IDwgPCA8IDwgPCA8IFxuXHRcdC8vIGVuZCBmdXR1cmUgY29kZSDij7Pij7Pij7Ncblx0fVxuXHQmLmJyb3dzZXItbm8tanMtbWVzc2FnZSB7XG5cdFx0Ly8gU2hvdyB0aGlzIGhpZGRlbiBlbGVtZW50IGlmIHVzaW5nIGEgYnJvd3NlciB3aXRoIEpTIHR1cm5lZCBvZmYgb3IgYmxvY2tlZCBfX19fX19fX19cblx0XHQubW9kLW5vLWpzICYge1xuXHRcdFx0ZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcblx0XHR9XG5cdH1cbn1cblxuLy8g4o+z4pig77iP4o+zIEZ1dHVyZSBkZXByZWNhdGlvbiwgYmFieSEg4o+z4pig77iP4o+zXG4vLyAj4o+zRlVUVVJFLUNTUy1HUklEXG4vLyBFeGNlcHRpb24gZm9yIElFMTErIEludGVybmV0IEV4cGxvcmVyIDExK1xuXzotbXMtZnVsbHNjcmVlbiwgOnJvb3QubW9kLW5vLXBpY3R1cmUgLmJyb3dzZXItbWVzc2FnZS5icm93c2VyLW91dGRhdGVkLW1lc3NhZ2UgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH1cbi8vIGVuZCBmdXR1cmUgZGVwcmVjYXRpb24gY29kZSDij7PimKDvuI/ij7NcbiIsIi8vXG4vLyBQcmludCBTdHlsZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBNb2RpZmllZCBIVE1MNSBCb2lsZXJwbGF0ZSdzIHByaW50IHN0eWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuQG1lZGlhIHByaW50IHtcblx0Kixcblx0Kjo6YmVmb3JlLFxuXHQqOjphZnRlciB7XG5cdFx0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcblx0XHRjb2xvcjogIzAwMCAhaW1wb3J0YW50OyAvLyBCbGFjayBwcmludHMgZmFzdGVyOiBodHRwOi8vd3d3LnNhbmJlaWppLmNvbS9hcmNoaXZlcy85NTNcblx0XHRib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG5cdFx0dGV4dC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcblx0fVxuXG5cdGEsXG5cdGE6dmlzaXRlZCB7XG5cdFx0dGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG5cdH1cblxuXHQvLyBhW2hyZWZdOjphZnRlciB7XG5cdC8vICAgICBjb250ZW50OiBcIiAoXCIgYXR0cihocmVmKSBcIilcIjtcblx0Ly8gfVxuXG5cdGFiYnJbdGl0bGVdOjphZnRlciB7XG5cdFx0Y29udGVudDogXCIgKFwiIGF0dHIodGl0bGUpIFwiKVwiO1xuXHR9XG5cblx0Ly8gLypcblx0Ly8gICogRG9uJ3Qgc2hvdyBsaW5rcyB0aGF0IGFyZSBmcmFnbWVudCBpZGVudGlmaWVycyxcblx0Ly8gICogb3IgdXNlIHRoZSBgamF2YXNjcmlwdDpgIHBzZXVkbyBwcm90b2NvbFxuXHQvLyAgKi9cblxuXHQvLyBhW2hyZWZePVwiI1wiXTo6YWZ0ZXIsXG5cdC8vIGFbaHJlZl49XCJqYXZhc2NyaXB0OlwiXTo6YWZ0ZXIge1xuXHQvLyAgICAgY29udGVudDogXCJcIjtcblx0Ly8gfVxuXG5cdHByZSxcblx0YmxvY2txdW90ZSB7XG5cdFx0Ym9yZGVyOiAxcHggc29saWQgIzk5OTtcblx0XHRwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7XG5cdH1cblxuXHQvLyAvKlxuXHQvLyAgKiBQcmludGluZyBUYWJsZXM6XG5cdC8vICAqIGh0dHA6Ly9jc3MtZGlzY3Vzcy5pbmN1dGlvLmNvbS93aWtpL1ByaW50aW5nX1RhYmxlc1xuXHQvLyAgKi9cblxuXHR0aGVhZCB7XG5cdFx0ZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwO1xuXHR9XG5cblx0dHIsXG5cdGltZyB7XG5cdFx0cGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xuXHR9XG5cblx0aW1nIHtcblx0XHRtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcblx0fVxuXG5cdHAsXG5cdGgyLFxuXHRoMyB7XG5cdFx0b3JwaGFuczogMztcblx0XHR3aWRvd3M6IDM7XG5cdH1cblxuXHRoMixcblx0aDMge1xuXHRcdHBhZ2UtYnJlYWstYWZ0ZXI6IGF2b2lkO1xuXHR9XG59XG4iLCIvL1xuLy8gRW1iZWQgV3JhcHBlclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gU3R5bGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi5lbWJlZC13cmFwcGVyIHtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRtYXgtd2lkdGg6IDEwMCU7XG5cdGhlaWdodDogMDtcblx0Ly8gU3RhbmRhcmQgdmlkZW8gc2l6ZSAoMTY6OSlcblx0cGFkZGluZy10b3A6ICg5IC8gMTYgKiAxMDAlKTtcblx0bWFyZ2luLWJvdHRvbTogQGNvbW1vbi12ZXJ0aWNhbC1ndXR0ZXI7XG5cdG92ZXJmbG93OiBoaWRkZW47XG5cblx0Ly8gRXh0ZW5zaW9ucyAmIFZhcmlhdGlvbnNcblx0Ly8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdC8vIFRlbGV2aXNpb24gcmF0aW8gKDQ6Mylcblx0Ji5lbWJlZC0tNHgzIHtcblx0XHRwYWRkaW5nLXRvcDogKDMgLyA0ICogMTAwJSk7XG5cdH1cblx0Ly8gQW5hbW9ycGhpYyB3aWRlc2NyZWVuIHJhdGlvICgyLjM5OjEpXG5cdCYuZW1iZWQtLWFuYW1vcnBoaWNfd2lkZXNjcmVlbiB7XG5cdFx0cGFkZGluZy10b3A6ICgxIC8gMi4zOSAqIDEwMCUpO1xuXHR9XG5cblx0Ly8gUG9zaXRpb24gdGhlIGlmcmFtZSAob3IgZW1iZWQtb2JqZWN0KVxuXHQ+IGlmcmFtZSxcblx0LmVtYmVkLW9iamVjdCB7XG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdHRvcDogMDtcblx0XHRsZWZ0OiAwO1xuXG5cdFx0d2lkdGg6IDEwMCU7XG5cdFx0aGVpZ2h0OiAxMDAlO1xuXHRcdG1hcmdpbjogMDtcblx0fVxufVxuIiwiLy9cbi8vIEZ1bGwgUGFnZSBCYWNrZHJvcFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gVmFyaWFibGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbkBmdWxsLXBhZ2UtYmFja2Ryb3Atei1pbmRleDogXHRcdFx0XHQxMDA7XG5AZnVsbC1wYWdlLWJhY2tkcm9wLWJnLWNvbG9yOiBcdFx0XHRcdEB1aS1vdmVybGF5LXNoYWRlLWJnLWNvbG9yO1xuQGZ1bGwtcGFnZS1iYWNrZHJvcC1hbmltYXRpb24taW46IFx0XHRcdGZhZGVJbiAuMjVzIGVhc2U7XG5AZnVsbC1wYWdlLWJhY2tkcm9wLWFuaW1hdGlvbi1vdXQ6IFx0XHRcdGZhZGVPdXQgLjI1cyBlYXNlIDBzIDEgbm9ybWFsIGZvcndhcmRzO1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gU3R5bGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi5mdWxsLXBhZ2UtYmFja2Ryb3Age1xuXHRkaXNwbGF5OiBub25lO1xuXG5cdHBvc2l0aW9uOiBmaXhlZDtcblx0dG9wOiAwO1xuXHRyaWdodDogMDtcblx0Ym90dG9tOiAwO1xuXHRsZWZ0OiAwO1xuXHR6LWluZGV4OiBAZnVsbC1wYWdlLWJhY2tkcm9wLXotaW5kZXg7XG5cblx0bWluLWhlaWdodDogMjAwMHB4O1xuXHRtaW4taGVpZ2h0OiAxMDB2aDtcblxuXHRiYWNrZ3JvdW5kLWNvbG9yOiBAZnVsbC1wYWdlLWJhY2tkcm9wLWJnLWNvbG9yO1xuXG5cdGFuaW1hdGlvbjogQGZ1bGwtcGFnZS1iYWNrZHJvcC1hbmltYXRpb24taW47XG5cblx0Ji5pcy1hY3RpdmUge1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHR9XG5cblx0Ji5hbmltYXRpbmctb3V0IHtcblx0XHRhbmltYXRpb246IEBmdWxsLXBhZ2UtYmFja2Ryb3AtYW5pbWF0aW9uLW91dDtcblx0fVxufVxuIiwiLy9cbi8vIElzbGFuZHNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gVmFyaWFibGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbkBpc2xhbmQtcGFkZGluZzogXHRcdFx0XHRcdEBjb21tb24tZ3V0dGVyO1xuQGlzbGFuZC1tYXJnaW4tYm90dG9tOiBcdFx0XHRcdEBjb21tb24tZ3V0dGVyO1xuQGlzbGFuZC1iZy1jb2xvcjogXHRcdFx0XHRcdHRyYW5zcGFyZW50O1xuXG5AaXNsYW5kLWhpZ2hsaWdodGVkLWJnLWNvbG9yOiBcdFx0I0YzRjNGMztcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIFN0eWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4uaXNsYW5kIHtcblx0LmNsZWFyX2Zsb2F0KCk7XG5cdHBhZGRpbmc6IEBpc2xhbmQtcGFkZGluZztcblx0bWFyZ2luLWJvdHRvbTogQGlzbGFuZC1tYXJnaW4tYm90dG9tO1xuXG5cdGJhY2tncm91bmQtY29sb3I6IEBpc2xhbmQtYmctY29sb3I7XG5cblx0Ly8gUHJldmVudCBsYXN0IGl0ZW0gZnJvbSB2aXN1YWxseSBpbmNyZWFzaW5nIHRoZSBndXR0ZXJcblx0PiA6bGFzdC1jaGlsZCB7XG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0fVxufVxuXG4vLyBFeHRlbnNpb25zXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLmlzbGFuZC0taGlnaGxpZ2h0ZWQge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiBAaXNsYW5kLWhpZ2hsaWdodGVkLWJnLWNvbG9yO1xufVxuIiwiLy9cbi8vIFJlc3BvbnNpdmUgVGFibGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIFZhcmlhYmxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5AcmVzcG9uc2l2ZS10YWJsZS1tYXJnaW4tYm90dG9tOiBcdFx0QGNvbW1vbi1lbGVtZW50LW1hcmdpbi1ib3R0b207XG5AcmVzcG9uc2l2ZS10YWJsZS1iZy1jb2xvcjogXHRcdFx0I0ZGRkZGRjtcbkByZXNwb25zaXZlLXRhYmxlLXNoYWRvdy1iZy1jb2xvcjogXHRcdCNDM0MzQzM7XG5cbkByZXNwb25zaXZlLXRhYmxlLWJnLXNpemUtMTogXHRcdFx0NGVtO1xuQHJlc3BvbnNpdmUtdGFibGUtYmctc2l6ZS0yOiBcdFx0XHQxZW07XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBTdHlsZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLnJlc3BvbnNpdmUtdGFibGUtd3JhcHBlciB7XG5cdC8vIExvY2FsIHZhcnMgZm9yIGxlZ2liaWxpdHlcblx0QHJ0Ymc6IFx0XHRAcmVzcG9uc2l2ZS10YWJsZS1iZy1jb2xvcjtcblx0QHJ0c2JnOiBcdEByZXNwb25zaXZlLXRhYmxlLXNoYWRvdy1iZy1jb2xvcjtcblxuXHRtYXgtd2lkdGg6IDEwMCU7XG5cdG1pbi1oZWlnaHQ6IDAuMDElO1xuXHRtYXJnaW4tYm90dG9tOiBAcmVzcG9uc2l2ZS10YWJsZS1tYXJnaW4tYm90dG9tO1xuXHRvdmVyZmxvdzogYXV0bztcblxuXHQvLyBkeW5hbWljIHNoYWRvdyBlZmZlY3QgX19fX19fX19fXG5cdG92ZXJmbG93LXg6IGF1dG87XG5cdGJhY2tncm91bmQtaW1hZ2U6XG5cdFx0bGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCBAcnRiZywgIGZhZGUoQHJ0YmcsIDAlKSksXG5cdFx0bGluZWFyLWdyYWRpZW50KHRvIGxlZnQsICBAcnRiZywgIGZhZGUoQHJ0YmcsIDAlKSksXG5cdFx0bGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCBAcnRzYmcsIGZhZGUoQHJ0c2JnLCAwJSkpLFxuXHRcdGxpbmVhci1ncmFkaWVudCh0byBsZWZ0LCAgQHJ0c2JnLCBmYWRlKEBydHNiZywgMCUpKTtcblx0YmFja2dyb3VuZC1wb3NpdGlvbjpcblx0XHQwIDAsXG5cdFx0MTAwJSAwLFxuXHRcdDAgMCxcblx0XHQxMDAlIDA7XG5cdGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG5cdGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuXHRiYWNrZ3JvdW5kLXNpemU6XG5cdFx0QHJlc3BvbnNpdmUtdGFibGUtYmctc2l6ZS0xIDEwMCUsXG5cdFx0QHJlc3BvbnNpdmUtdGFibGUtYmctc2l6ZS0xIDEwMCUsXG5cdFx0QHJlc3BvbnNpdmUtdGFibGUtYmctc2l6ZS0yIDEwMCUsXG5cdFx0QHJlc3BvbnNpdmUtdGFibGUtYmctc2l6ZS0yIDEwMCU7XG5cdGJhY2tncm91bmQtYXR0YWNobWVudDpcblx0XHRsb2NhbCxcblx0XHRsb2NhbCxcblx0XHRzY3JvbGwsXG5cdFx0c2Nyb2xsO1xuXG5cdD4gdGFibGUge1xuXHRcdHdpZHRoOiAxMDAlO1xuXHRcdC8vIE5vdGU6IG1pbi13aWR0aCBjYW4gYmUgc2V0KiB0byBhIGNlcnRhaW4gdmFsdWUgdG8gZ3VhcmFudGVlIHRoYXQgdGhlIHRhYmxlIHN0cmV0Y2hlcyB0byBhIGNlcnRhaW4gd2lkdGguIE1pZ2h0IGJlIGhlbHBmdWwgdG8gc3RyZXRjaCBvdXQgdGFibGVzIHRoYXQgdGhlIGJyb3dzZXIgZG9lc24ndCBzZWUgdGhlIG5lZWQgdG8gc3RyZXRjaCBvdXQgc28gbXVjaC4gKiBTZXR0aW5nIG1pbi13aWR0aCBtaWdodCBiZSBiZXN0IGRvbmUgaW5saW5lIG9uIGEgdGFibGUtcGVyLXRhYmxlIGJhc2lzLiBDb25zaWRlciBzZXR0aW5nIHdpdGggKHIpZW0gdmFsdWVzIHNvIHRoZSB0YWJsZSB3aWR0aCB3aWxsIHNjYWxlIGFsb25nIHdpdGggdGhlIHR5cGUuXG5cdFx0bWFyZ2luLXRvcDogMDtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHR9XG59XG4iLCIvL1xuLy8gV3JhcHBpbmcgTGFiZWxzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIFZhcmlhYmxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIERlZmF1bHRzICYgTGF5b3V0IF9fX19fX19fX1xuXG4vLyBPdXRlciBsYWJlbFxuQHdyYXBwaW5nLWxhYmVsLW1hcmdpbi1ib3R0b206IFx0XHRcdFx0MDtcbkB3cmFwcGluZy1sYWJlbC1mb250LXNpemU6IFx0XHRcdFx0XHQwLjlyZW07XG5Ad3JhcHBpbmctbGFiZWwtZm9udC13ZWlnaHQ6IFx0XHRcdFx0bm9ybWFsO1xuQHdyYXBwaW5nLWxhYmVsLXRyYW5zaXRpb246IFx0XHRcdFx0YWxsIDAuMXMgZWFzZS1vdXQ7XG5cbi8vIElucHV0IChyYWRpbyBvciBjaGVja2JveClcbkB3cmFwcGluZy1sYWJlbC1pbnB1dC1mb250LXNpemU6IFx0XHRcdEB3cmFwcGluZy1sYWJlbC1mb250LXNpemU7XG5cbi8vIExhYmVsIGNvbnRlbnRzIC8gaW5uZXIgbGFiZWxcbkB3cmFwcGluZy1sYWJlbC1jb250ZW50cy1wYWRkaW5nOiBcdFx0XHQuMjVyZW0gMXJlbSAuMjVyZW0gMnJlbTtcbkB3cmFwcGluZy1sYWJlbC1jb250ZW50cy10cmFuc2l0aW9uOiBcdFx0YWxsIC4xMnMgZWFzZS1vdXQ7XG5cbi8vIFN0YXRlcyBfX19fX19fX19cblxuLy8gRm9jdXMgJiBIb3ZlclxuQHdyYXBwaW5nLWxhYmVsLWhvdmVyLWJnLWNvbG9yOiBcdFx0XHRmYWRlKCMwMDAsIDA0JSk7XG5cbi8vIEFjdGl2ZVxuQHdyYXBwaW5nLWxhYmVsLWFjdGl2ZS1iZy1jb2xvcjogXHRcdFx0ZmFkZSgjMDAwLCA4JSk7XG5cbi8vIENoZWNrZWRcbkB3cmFwcGluZy1sYWJlbC1jaGVja2VkLWJnLWNvbG9yOiBcdFx0XHRmYWRlKEBmb2N1cy1oaWdobGlnaHQtY29sb3IsIDE1JSk7XG5Ad3JhcHBpbmctbGFiZWwtY2hlY2tlZC10ZXh0LXNoYWRvdzogXHRcdDAgMC4wNjI1ZW0gMC4wNjI1ZW0gI2ZmZjtcblxuLy8gQ2hlY2tlZCBGb2N1cyAmIEhvdmVyXG5Ad3JhcHBpbmctbGFiZWwtY2hlY2tlZC1mb2N1cy1iZy1jb2xvcjogXHRmYWRlKEBmb2N1cy1oaWdobGlnaHQtY29sb3IsIDEwJSk7XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIFN0eWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gQmFzZSBXcmFwcGluZyBMYWJlbFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4ud3JhcHBpbmctbGFiZWwge1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdC5kaXNwbGF5LWZsZXgoKTtcblx0LmZsZXgtYWxpZ24taXRlbXMoYmFzZWxpbmUpO1xuXHRvdmVyZmxvdzogaGlkZGVuO1xuXHRtYXJnaW4tYm90dG9tOiBAd3JhcHBpbmctbGFiZWwtbWFyZ2luLWJvdHRvbTtcblxuXHRmb250LXNpemU6IEB3cmFwcGluZy1sYWJlbC1mb250LXNpemU7XG5cdGZvbnQtd2VpZ2h0OiBAd3JhcHBpbmctbGFiZWwtZm9udC13ZWlnaHQ7XG5cblx0LnRyYW5zaXRpb24oQHdyYXBwaW5nLWxhYmVsLXRyYW5zaXRpb24pO1xuXG5cdC8vIENoaWxkcmVuIF9fX19fX19fX1xuXHRpbnB1dCB7XG5cdFx0bWFyZ2luLXJpZ2h0OiAtMS40NWVtO1xuXHRcdG1hcmdpbi1sZWZ0OiAgIDAuNDVlbTtcblxuXHRcdGZvbnQtc2l6ZTogQHdyYXBwaW5nLWxhYmVsLWlucHV0LWZvbnQtc2l6ZTtcblx0fVxuXHQubGFiZWwtY29udGVudHMge1xuXHRcdC5mbGV4KDEpO1xuXG5cdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0d2lkdGg6IDEwMCU7IC8vIGZvciBmbGV4Ym94IHB1cnBvc2VzXG5cdFx0cGFkZGluZzogQHdyYXBwaW5nLWxhYmVsLWNvbnRlbnRzLXBhZGRpbmc7XG5cblx0XHQudHJhbnNpdGlvbihAd3JhcHBpbmctbGFiZWwtY29udGVudHMtdHJhbnNpdGlvbik7XG5cdH1cblxuXHQmLndyYXBwaW5nLWxhYmVsLS1jZW50ZXJlZC1pbnB1dCB7XG5cdFx0aW5wdXQge1xuXHRcdFx0dG9wOiAtMC4xZW07IC8vIGNvcnJlY3RzIGZvciBicm93c2VyIHNpemluZy9wb3NpdGlvbmluZ1xuXHRcdH1cblxuXHRcdC5mbGV4LWFsaWduLWl0ZW1zKGNlbnRlcik7XG5cdH1cblx0XG5cdC8vIFN0YXRlcyBfX19fX19fX19cblx0aW5wdXQ6Zm9jdXMgfiAubGFiZWwtY29udGVudHMsXG5cdCY6aG92ZXIgLmxhYmVsLWNvbnRlbnRzIHtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiBAd3JhcHBpbmctbGFiZWwtaG92ZXItYmctY29sb3I7XG5cdH1cblx0JjphY3RpdmUge1xuXHRcdGJhY2tncm91bmQtY29sb3I6IEB3cmFwcGluZy1sYWJlbC1hY3RpdmUtYmctY29sb3I7XG5cdH1cblx0aW5wdXQ6Y2hlY2tlZCB+IC5sYWJlbC1jb250ZW50cyB7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogQHdyYXBwaW5nLWxhYmVsLWNoZWNrZWQtYmctY29sb3I7XG5cdFx0dGV4dC1zaGFkb3c6IEB3cmFwcGluZy1sYWJlbC1jaGVja2VkLXRleHQtc2hhZG93O1xuXHR9XG5cdCY6aG92ZXIgaW5wdXQ6Y2hlY2tlZCB+IC5sYWJlbC1jb250ZW50cyxcblx0aW5wdXQ6Y2hlY2tlZDpmb2N1cyB+IC5sYWJlbC1jb250ZW50cyB7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogQHdyYXBwaW5nLWxhYmVsLWNoZWNrZWQtZm9jdXMtYmctY29sb3I7XG5cdH1cbn1cbiIsIi8vIFdQIEFkbWluIEJhciBNb2JpbGUgZml4ZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBPdmVycmlkZTogZW5zdXJlIHRoZSBXUCBBZG1pbiBCYXIgc3RheXMgcG9zaXRpb246IGZpeGVkIChhcyBvcHBvc2VkIHRvIHRoZWlyIHN0eWxlIGZvciBtYWtpbmcgaXQgYWJzb2x1dGUgYXQgNjAwcHggYW5kIGJlbG93LCBhcyBvZiB0aGlzIHdyaXRpbmcpXG5Ad3AtYWRtaW5iYXItcG9zaXRpb24tb3ZlcnJpZGU6XHRcdGZpeGVkICFpbXBvcnRhbnQ7XG4jd3BhZG1pbmJhciB7XG5cdHBvc2l0aW9uOiBAd3AtYWRtaW5iYXItcG9zaXRpb24tb3ZlcnJpZGU7XG59XG4iLCIvL1xuLy8gU2l0ZSBMYXlvdXQgLSBMYXlvdXQgb3ZlcnJpZGVzICYgdW5pcXVlIHN0eWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBIZWFkZXJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cblxuLy8gTmF2aWdhdGlvblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gTWFpbiAvIE1haW4gQ29udGVudFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4ucG9zdC1jb250ZW50LXdyYXBwZXIge1xuICBtYXgtd2lkdGg6IEBzaXRlLW1heC13aWR0aDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5tYWluLWNvbnRlbnQge1xuICBwYWRkaW5nOiAwIDUlO1xufVxuXG5cbi8vIEZvb3RlclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4iXSwiZmlsZSI6Imdsb2JhbC5jc3MifQ== */
